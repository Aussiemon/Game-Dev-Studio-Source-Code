shaders.horizontalGaussianBlur = love.graphics.newShader("\t#ifdef PIXEL\n\t\textern vec2 resolution;\n\t\t\n\t\tvec4 blur13(Image canvas, vec2 uv, vec2 direction) {\n\t\t\tvec4 final = vec4(0.0);\n\t\t\tvec2 off1 = vec2(1.411764705882353) * direction;\n\t\t\tvec2 off2 = vec2(3.2941176470588234) * direction;\n\t\t\tvec2 off3 = vec2(5.176470588235294) * direction;\n\t\t\tfinal += Texel(canvas, uv) * 0.1964825501511404;\n\t\t\tfinal += Texel(canvas, uv + (off1 / resolution)) * 0.2969069646728344;\n\t\t\tfinal += Texel(canvas, uv - (off1 / resolution)) * 0.2969069646728344;\n\t\t\tfinal += Texel(canvas, uv + (off2 / resolution)) * 0.09447039785044732;\n\t\t\tfinal += Texel(canvas, uv - (off2 / resolution)) * 0.09447039785044732;\n\t\t\tfinal += Texel(canvas, uv + (off3 / resolution)) * 0.010381362401148057;\n\t\t\tfinal += Texel(canvas, uv - (off3 / resolution)) * 0.010381362401148057;\n\t\t\treturn final;\n\t\t}\n\t\t\n\t\tvec4 effect(vec4 color, Image canvas, vec2 uv, vec2 pixelCoordinates)\n\t\t{\n\t\t\treturn blur13(canvas, uv, vec2(1, 0));\n\t\t}\n\t#endif\n")
shaders.verticalGaussianBlur = love.graphics.newShader("\t#ifdef PIXEL\n\t\textern vec2 resolution;\n\t\t\n\t\tvec4 blur13(Image canvas, vec2 uv, vec2 direction) {\n\t\t\tvec4 final = vec4(0.0);\n\t\t\tvec2 off1 = vec2(1.411764705882353) * direction;\n\t\t\tvec2 off2 = vec2(3.2941176470588234) * direction;\n\t\t\tvec2 off3 = vec2(5.176470588235294) * direction;\n\t\t\tfinal += Texel(canvas, uv) * 0.1964825501511404;\n\t\t\tfinal += Texel(canvas, uv + (off1 / resolution)) * 0.2969069646728344;\n\t\t\tfinal += Texel(canvas, uv - (off1 / resolution)) * 0.2969069646728344;\n\t\t\tfinal += Texel(canvas, uv + (off2 / resolution)) * 0.09447039785044732;\n\t\t\tfinal += Texel(canvas, uv - (off2 / resolution)) * 0.09447039785044732;\n\t\t\tfinal += Texel(canvas, uv + (off3 / resolution)) * 0.010381362401148057;\n\t\t\tfinal += Texel(canvas, uv - (off3 / resolution)) * 0.010381362401148057;\n\t\t\treturn final;\n\t\t}\n\t\t\n\t\tvec4 effect(vec4 color, Image canvas, vec2 uv, vec2 pixelCoordinates)\n\t\t{\n\t\t\treturn blur13(canvas, uv, vec2(0, 1));\n\t\t}\n\t#endif\n")
