local ffi = require("ffi")
local libs = ffi_OpenGL_libs or {
	OSX = {
		x64 = "OpenGL.framework/OpenGL",
		x86 = "OpenGL.framework/OpenGL"
	},
	Windows = {
		x64 = "OPENGL32.DLL",
		x86 = "OPENGL32.DLL"
	},
	Linux = {
		x64 = "libGL.so",
		x86 = "libGL.so",
		arm = "libGL.so"
	},
	BSD = {
		x64 = "libGL.so",
		x86 = "libGL.so"
	},
	POSIX = {
		x64 = "libGL.so",
		x86 = "libGL.so"
	},
	Other = {
		x64 = "libGL.so",
		x86 = "libGL.so"
	}
}
local lib = ffi_OpenGL_lib or libs[ffi.os][ffi.arch]
local gl = ffi.load(lib)

ffi.cdef("enum {\n GL_ACCUM                          = 0x0100,\n GL_LOAD                           = 0x0101,\n GL_RETURN                         = 0x0102,\n GL_MULT                           = 0x0103,\n GL_ADD                            = 0x0104,\n GL_NEVER                          = 0x0200,\n GL_LESS                           = 0x0201,\n GL_EQUAL                          = 0x0202,\n GL_LEQUAL                         = 0x0203,\n GL_GREATER                        = 0x0204,\n GL_NOTEQUAL                       = 0x0205,\n GL_GEQUAL                         = 0x0206,\n GL_ALWAYS                         = 0x0207,\n GL_CURRENT_BIT                    = 0x00000001,\n GL_POINT_BIT                      = 0x00000002,\n GL_LINE_BIT                       = 0x00000004,\n GL_POLYGON_BIT                    = 0x00000008,\n GL_POLYGON_STIPPLE_BIT            = 0x00000010,\n GL_PIXEL_MODE_BIT                 = 0x00000020,\n GL_LIGHTING_BIT                   = 0x00000040,\n GL_FOG_BIT                        = 0x00000080,\n GL_DEPTH_BUFFER_BIT               = 0x00000100,\n GL_ACCUM_BUFFER_BIT               = 0x00000200,\n GL_STENCIL_BUFFER_BIT             = 0x00000400,\n GL_VIEWPORT_BIT                   = 0x00000800,\n GL_TRANSFORM_BIT                  = 0x00001000,\n GL_ENABLE_BIT                     = 0x00002000,\n GL_COLOR_BUFFER_BIT               = 0x00004000,\n GL_HINT_BIT                       = 0x00008000,\n GL_EVAL_BIT                       = 0x00010000,\n GL_LIST_BIT                       = 0x00020000,\n GL_TEXTURE_BIT                    = 0x00040000,\n GL_SCISSOR_BIT                    = 0x00080000,\n GL_ALL_ATTRIB_BITS                = 0x000fffff,\n GL_POINTS                         = 0x0000,\n GL_LINES                          = 0x0001,\n GL_LINE_LOOP                      = 0x0002,\n GL_LINE_STRIP                     = 0x0003,\n GL_TRIANGLES                      = 0x0004,\n GL_TRIANGLE_STRIP                 = 0x0005,\n GL_TRIANGLE_FAN                   = 0x0006,\n GL_QUADS                          = 0x0007,\n GL_QUAD_STRIP                     = 0x0008,\n GL_POLYGON                        = 0x0009,\n GL_ZERO                           = 0,\n GL_ONE                            = 1,\n GL_SRC_COLOR                      = 0x0300,\n GL_ONE_MINUS_SRC_COLOR            = 0x0301,\n GL_SRC_ALPHA                      = 0x0302,\n GL_ONE_MINUS_SRC_ALPHA            = 0x0303,\n GL_DST_ALPHA                      = 0x0304,\n GL_ONE_MINUS_DST_ALPHA            = 0x0305,\n GL_DST_COLOR                      = 0x0306,\n GL_ONE_MINUS_DST_COLOR            = 0x0307,\n GL_SRC_ALPHA_SATURATE             = 0x0308,\n GL_TRUE                           = 1,\n GL_FALSE                          = 0,\n GL_CLIP_PLANE0                    = 0x3000,\n GL_CLIP_PLANE1                    = 0x3001,\n GL_CLIP_PLANE2                    = 0x3002,\n GL_CLIP_PLANE3                    = 0x3003,\n GL_CLIP_PLANE4                    = 0x3004,\n GL_CLIP_PLANE5                    = 0x3005,\n GL_BYTE                           = 0x1400,\n GL_UNSIGNED_BYTE                  = 0x1401,\n GL_SHORT                          = 0x1402,\n GL_UNSIGNED_SHORT                 = 0x1403,\n GL_INT                            = 0x1404,\n GL_UNSIGNED_INT                   = 0x1405,\n GL_FLOAT                          = 0x1406,\n GL_2_BYTES                        = 0x1407,\n GL_3_BYTES                        = 0x1408,\n GL_4_BYTES                        = 0x1409,\n GL_DOUBLE                         = 0x140A,\n GL_NONE                           = 0,\n GL_FRONT_LEFT                     = 0x0400,\n GL_FRONT_RIGHT                    = 0x0401,\n GL_BACK_LEFT                      = 0x0402,\n GL_BACK_RIGHT                     = 0x0403,\n GL_FRONT                          = 0x0404,\n GL_BACK                           = 0x0405,\n GL_LEFT                           = 0x0406,\n GL_RIGHT                          = 0x0407,\n GL_FRONT_AND_BACK                 = 0x0408,\n GL_AUX0                           = 0x0409,\n GL_AUX1                           = 0x040A,\n GL_AUX2                           = 0x040B,\n GL_AUX3                           = 0x040C,\n GL_NO_ERROR                       = 0,\n GL_INVALID_ENUM                   = 0x0500,\n GL_INVALID_VALUE                  = 0x0501,\n GL_INVALID_OPERATION              = 0x0502,\n GL_STACK_OVERFLOW                 = 0x0503,\n GL_STACK_UNDERFLOW                = 0x0504,\n GL_OUT_OF_MEMORY                  = 0x0505,\n GL_2D                             = 0x0600,\n GL_3D                             = 0x0601,\n GL_3D_COLOR                       = 0x0602,\n GL_3D_COLOR_TEXTURE               = 0x0603,\n GL_4D_COLOR_TEXTURE               = 0x0604,\n GL_PASS_THROUGH_TOKEN             = 0x0700,\n GL_POINT_TOKEN                    = 0x0701,\n GL_LINE_TOKEN                     = 0x0702,\n GL_POLYGON_TOKEN                  = 0x0703,\n GL_BITMAP_TOKEN                   = 0x0704,\n GL_DRAW_PIXEL_TOKEN               = 0x0705,\n GL_COPY_PIXEL_TOKEN               = 0x0706,\n GL_LINE_RESET_TOKEN               = 0x0707,\n GL_EXP                            = 0x0800,\n GL_EXP2                           = 0x0801,\n GL_CW                             = 0x0900,\n GL_CCW                            = 0x0901,\n GL_COEFF                          = 0x0A00,\n GL_ORDER                          = 0x0A01,\n GL_DOMAIN                         = 0x0A02,\n GL_CURRENT_COLOR                  = 0x0B00,\n GL_CURRENT_INDEX                  = 0x0B01,\n GL_CURRENT_NORMAL                 = 0x0B02,\n GL_CURRENT_TEXTURE_COORDS         = 0x0B03,\n GL_CURRENT_RASTER_COLOR           = 0x0B04,\n GL_CURRENT_RASTER_INDEX           = 0x0B05,\n GL_CURRENT_RASTER_TEXTURE_COORDS  = 0x0B06,\n GL_CURRENT_RASTER_POSITION        = 0x0B07,\n GL_CURRENT_RASTER_POSITION_VALID  = 0x0B08,\n GL_CURRENT_RASTER_DISTANCE        = 0x0B09,\n GL_POINT_SMOOTH                   = 0x0B10,\n GL_POINT_SIZE                     = 0x0B11,\n GL_POINT_SIZE_RANGE               = 0x0B12,\n GL_POINT_SIZE_GRANULARITY         = 0x0B13,\n GL_LINE_SMOOTH                    = 0x0B20,\n GL_LINE_WIDTH                     = 0x0B21,\n GL_LINE_WIDTH_RANGE               = 0x0B22,\n GL_LINE_WIDTH_GRANULARITY         = 0x0B23,\n GL_LINE_STIPPLE                   = 0x0B24,\n GL_LINE_STIPPLE_PATTERN           = 0x0B25,\n GL_LINE_STIPPLE_REPEAT            = 0x0B26,\n GL_LIST_MODE                      = 0x0B30,\n GL_MAX_LIST_NESTING               = 0x0B31,\n GL_LIST_BASE                      = 0x0B32,\n GL_LIST_INDEX                     = 0x0B33,\n GL_POLYGON_MODE                   = 0x0B40,\n GL_POLYGON_SMOOTH                 = 0x0B41,\n GL_POLYGON_STIPPLE                = 0x0B42,\n GL_EDGE_FLAG                      = 0x0B43,\n GL_CULL_FACE                      = 0x0B44,\n GL_CULL_FACE_MODE                 = 0x0B45,\n GL_FRONT_FACE                     = 0x0B46,\n GL_LIGHTING                       = 0x0B50,\n GL_LIGHT_MODEL_LOCAL_VIEWER       = 0x0B51,\n GL_LIGHT_MODEL_TWO_SIDE           = 0x0B52,\n GL_LIGHT_MODEL_AMBIENT            = 0x0B53,\n GL_SHADE_MODEL                    = 0x0B54,\n GL_COLOR_MATERIAL_FACE            = 0x0B55,\n GL_COLOR_MATERIAL_PARAMETER       = 0x0B56,\n GL_COLOR_MATERIAL                 = 0x0B57,\n GL_FOG                            = 0x0B60,\n GL_FOG_INDEX                      = 0x0B61,\n GL_FOG_DENSITY                    = 0x0B62,\n GL_FOG_START                      = 0x0B63,\n GL_FOG_END                        = 0x0B64,\n GL_FOG_MODE                       = 0x0B65,\n GL_FOG_COLOR                      = 0x0B66,\n GL_DEPTH_RANGE                    = 0x0B70,\n GL_DEPTH_TEST                     = 0x0B71,\n GL_DEPTH_WRITEMASK                = 0x0B72,\n GL_DEPTH_CLEAR_VALUE              = 0x0B73,\n GL_DEPTH_FUNC                     = 0x0B74,\n GL_ACCUM_CLEAR_VALUE              = 0x0B80,\n GL_STENCIL_TEST                   = 0x0B90,\n GL_STENCIL_CLEAR_VALUE            = 0x0B91,\n GL_STENCIL_FUNC                   = 0x0B92,\n GL_STENCIL_VALUE_MASK             = 0x0B93,\n GL_STENCIL_FAIL                   = 0x0B94,\n GL_STENCIL_PASS_DEPTH_FAIL        = 0x0B95,\n GL_STENCIL_PASS_DEPTH_PASS        = 0x0B96,\n GL_STENCIL_REF                    = 0x0B97,\n GL_STENCIL_WRITEMASK              = 0x0B98,\n GL_MATRIX_MODE                    = 0x0BA0,\n GL_NORMALIZE                      = 0x0BA1,\n GL_VIEWPORT                       = 0x0BA2,\n GL_MODELVIEW_STACK_DEPTH          = 0x0BA3,\n GL_PROJECTION_STACK_DEPTH         = 0x0BA4,\n GL_TEXTURE_STACK_DEPTH            = 0x0BA5,\n GL_MODELVIEW_MATRIX               = 0x0BA6,\n GL_PROJECTION_MATRIX              = 0x0BA7,\n GL_TEXTURE_MATRIX                 = 0x0BA8,\n GL_ATTRIB_STACK_DEPTH             = 0x0BB0,\n GL_CLIENT_ATTRIB_STACK_DEPTH      = 0x0BB1,\n GL_ALPHA_TEST                     = 0x0BC0,\n GL_ALPHA_TEST_FUNC                = 0x0BC1,\n GL_ALPHA_TEST_REF                 = 0x0BC2,\n GL_DITHER                         = 0x0BD0,\n GL_BLEND_DST                      = 0x0BE0,\n GL_BLEND_SRC                      = 0x0BE1,\n GL_BLEND                          = 0x0BE2,\n GL_LOGIC_OP_MODE                  = 0x0BF0,\n GL_INDEX_LOGIC_OP                 = 0x0BF1,\n GL_COLOR_LOGIC_OP                 = 0x0BF2,\n GL_AUX_BUFFERS                    = 0x0C00,\n GL_DRAW_BUFFER                    = 0x0C01,\n GL_READ_BUFFER                    = 0x0C02,\n GL_SCISSOR_BOX                    = 0x0C10,\n GL_SCISSOR_TEST                   = 0x0C11,\n GL_INDEX_CLEAR_VALUE              = 0x0C20,\n GL_INDEX_WRITEMASK                = 0x0C21,\n GL_COLOR_CLEAR_VALUE              = 0x0C22,\n GL_COLOR_WRITEMASK                = 0x0C23,\n GL_INDEX_MODE                     = 0x0C30,\n GL_RGBA_MODE                      = 0x0C31,\n GL_DOUBLEBUFFER                   = 0x0C32,\n GL_STEREO                         = 0x0C33,\n GL_RENDER_MODE                    = 0x0C40,\n GL_PERSPECTIVE_CORRECTION_HINT    = 0x0C50,\n GL_POINT_SMOOTH_HINT              = 0x0C51,\n GL_LINE_SMOOTH_HINT               = 0x0C52,\n GL_POLYGON_SMOOTH_HINT            = 0x0C53,\n GL_FOG_HINT                       = 0x0C54,\n GL_TEXTURE_GEN_S                  = 0x0C60,\n GL_TEXTURE_GEN_T                  = 0x0C61,\n GL_TEXTURE_GEN_R                  = 0x0C62,\n GL_TEXTURE_GEN_Q                  = 0x0C63,\n GL_PIXEL_MAP_I_TO_I               = 0x0C70,\n GL_PIXEL_MAP_S_TO_S               = 0x0C71,\n GL_PIXEL_MAP_I_TO_R               = 0x0C72,\n GL_PIXEL_MAP_I_TO_G               = 0x0C73,\n GL_PIXEL_MAP_I_TO_B               = 0x0C74,\n GL_PIXEL_MAP_I_TO_A               = 0x0C75,\n GL_PIXEL_MAP_R_TO_R               = 0x0C76,\n GL_PIXEL_MAP_G_TO_G               = 0x0C77,\n GL_PIXEL_MAP_B_TO_B               = 0x0C78,\n GL_PIXEL_MAP_A_TO_A               = 0x0C79,\n GL_PIXEL_MAP_I_TO_I_SIZE          = 0x0CB0,\n GL_PIXEL_MAP_S_TO_S_SIZE          = 0x0CB1,\n GL_PIXEL_MAP_I_TO_R_SIZE          = 0x0CB2,\n GL_PIXEL_MAP_I_TO_G_SIZE          = 0x0CB3,\n GL_PIXEL_MAP_I_TO_B_SIZE          = 0x0CB4,\n GL_PIXEL_MAP_I_TO_A_SIZE          = 0x0CB5,\n GL_PIXEL_MAP_R_TO_R_SIZE          = 0x0CB6,\n GL_PIXEL_MAP_G_TO_G_SIZE          = 0x0CB7,\n GL_PIXEL_MAP_B_TO_B_SIZE          = 0x0CB8,\n GL_PIXEL_MAP_A_TO_A_SIZE          = 0x0CB9,\n GL_UNPACK_SWAP_BYTES              = 0x0CF0,\n GL_UNPACK_LSB_FIRST               = 0x0CF1,\n GL_UNPACK_ROW_LENGTH              = 0x0CF2,\n GL_UNPACK_SKIP_ROWS               = 0x0CF3,\n GL_UNPACK_SKIP_PIXELS             = 0x0CF4,\n GL_UNPACK_ALIGNMENT               = 0x0CF5,\n GL_PACK_SWAP_BYTES                = 0x0D00,\n GL_PACK_LSB_FIRST                 = 0x0D01,\n GL_PACK_ROW_LENGTH                = 0x0D02,\n GL_PACK_SKIP_ROWS                 = 0x0D03,\n GL_PACK_SKIP_PIXELS               = 0x0D04,\n GL_PACK_ALIGNMENT                 = 0x0D05,\n GL_MAP_COLOR                      = 0x0D10,\n GL_MAP_STENCIL                    = 0x0D11,\n GL_INDEX_SHIFT                    = 0x0D12,\n GL_INDEX_OFFSET                   = 0x0D13,\n GL_RED_SCALE                      = 0x0D14,\n GL_RED_BIAS                       = 0x0D15,\n GL_ZOOM_X                         = 0x0D16,\n GL_ZOOM_Y                         = 0x0D17,\n GL_GREEN_SCALE                    = 0x0D18,\n GL_GREEN_BIAS                     = 0x0D19,\n GL_BLUE_SCALE                     = 0x0D1A,\n GL_BLUE_BIAS                      = 0x0D1B,\n GL_ALPHA_SCALE                    = 0x0D1C,\n GL_ALPHA_BIAS                     = 0x0D1D,\n GL_DEPTH_SCALE                    = 0x0D1E,\n GL_DEPTH_BIAS                     = 0x0D1F,\n GL_MAX_EVAL_ORDER                 = 0x0D30,\n GL_MAX_LIGHTS                     = 0x0D31,\n GL_MAX_CLIP_PLANES                = 0x0D32,\n GL_MAX_TEXTURE_SIZE               = 0x0D33,\n GL_MAX_PIXEL_MAP_TABLE            = 0x0D34,\n GL_MAX_ATTRIB_STACK_DEPTH         = 0x0D35,\n GL_MAX_MODELVIEW_STACK_DEPTH      = 0x0D36,\n GL_MAX_NAME_STACK_DEPTH           = 0x0D37,\n GL_MAX_PROJECTION_STACK_DEPTH     = 0x0D38,\n GL_MAX_TEXTURE_STACK_DEPTH        = 0x0D39,\n GL_MAX_VIEWPORT_DIMS              = 0x0D3A,\n GL_MAX_CLIENT_ATTRIB_STACK_DEPTH  = 0x0D3B,\n GL_SUBPIXEL_BITS                  = 0x0D50,\n GL_INDEX_BITS                     = 0x0D51,\n GL_RED_BITS                       = 0x0D52,\n GL_GREEN_BITS                     = 0x0D53,\n GL_BLUE_BITS                      = 0x0D54,\n GL_ALPHA_BITS                     = 0x0D55,\n GL_DEPTH_BITS                     = 0x0D56,\n GL_STENCIL_BITS                   = 0x0D57,\n GL_ACCUM_RED_BITS                 = 0x0D58,\n GL_ACCUM_GREEN_BITS               = 0x0D59,\n GL_ACCUM_BLUE_BITS                = 0x0D5A,\n GL_ACCUM_ALPHA_BITS               = 0x0D5B,\n GL_NAME_STACK_DEPTH               = 0x0D70,\n GL_AUTO_NORMAL                    = 0x0D80,\n GL_MAP1_COLOR_4                   = 0x0D90,\n GL_MAP1_INDEX                     = 0x0D91,\n GL_MAP1_NORMAL                    = 0x0D92,\n GL_MAP1_TEXTURE_COORD_1           = 0x0D93,\n GL_MAP1_TEXTURE_COORD_2           = 0x0D94,\n GL_MAP1_TEXTURE_COORD_3           = 0x0D95,\n GL_MAP1_TEXTURE_COORD_4           = 0x0D96,\n GL_MAP1_VERTEX_3                  = 0x0D97,\n GL_MAP1_VERTEX_4                  = 0x0D98,\n GL_MAP2_COLOR_4                   = 0x0DB0,\n GL_MAP2_INDEX                     = 0x0DB1,\n GL_MAP2_NORMAL                    = 0x0DB2,\n GL_MAP2_TEXTURE_COORD_1           = 0x0DB3,\n GL_MAP2_TEXTURE_COORD_2           = 0x0DB4,\n GL_MAP2_TEXTURE_COORD_3           = 0x0DB5,\n GL_MAP2_TEXTURE_COORD_4           = 0x0DB6,\n GL_MAP2_VERTEX_3                  = 0x0DB7,\n GL_MAP2_VERTEX_4                  = 0x0DB8,\n GL_MAP1_GRID_DOMAIN               = 0x0DD0,\n GL_MAP1_GRID_SEGMENTS             = 0x0DD1,\n GL_MAP2_GRID_DOMAIN               = 0x0DD2,\n GL_MAP2_GRID_SEGMENTS             = 0x0DD3,\n GL_TEXTURE_1D                     = 0x0DE0,\n GL_TEXTURE_2D                     = 0x0DE1,\n GL_FEEDBACK_BUFFER_POINTER        = 0x0DF0,\n GL_FEEDBACK_BUFFER_SIZE           = 0x0DF1,\n GL_FEEDBACK_BUFFER_TYPE           = 0x0DF2,\n GL_SELECTION_BUFFER_POINTER       = 0x0DF3,\n GL_SELECTION_BUFFER_SIZE          = 0x0DF4,\n GL_TEXTURE_WIDTH                  = 0x1000,\n GL_TEXTURE_HEIGHT                 = 0x1001,\n GL_TEXTURE_INTERNAL_FORMAT        = 0x1003,\n GL_TEXTURE_BORDER_COLOR           = 0x1004,\n GL_TEXTURE_BORDER                 = 0x1005,\n GL_DONT_CARE                      = 0x1100,\n GL_FASTEST                        = 0x1101,\n GL_NICEST                         = 0x1102,\n GL_LIGHT0                         = 0x4000,\n GL_LIGHT1                         = 0x4001,\n GL_LIGHT2                         = 0x4002,\n GL_LIGHT3                         = 0x4003,\n GL_LIGHT4                         = 0x4004,\n GL_LIGHT5                         = 0x4005,\n GL_LIGHT6                         = 0x4006,\n GL_LIGHT7                         = 0x4007,\n GL_AMBIENT                        = 0x1200,\n GL_DIFFUSE                        = 0x1201,\n GL_SPECULAR                       = 0x1202,\n GL_POSITION                       = 0x1203,\n GL_SPOT_DIRECTION                 = 0x1204,\n GL_SPOT_EXPONENT                  = 0x1205,\n GL_SPOT_CUTOFF                    = 0x1206,\n GL_CONSTANT_ATTENUATION           = 0x1207,\n GL_LINEAR_ATTENUATION             = 0x1208,\n GL_QUADRATIC_ATTENUATION          = 0x1209,\n GL_COMPILE                        = 0x1300,\n GL_COMPILE_AND_EXECUTE            = 0x1301,\n GL_CLEAR                          = 0x1500,\n GL_AND                            = 0x1501,\n GL_AND_REVERSE                    = 0x1502,\n GL_COPY                           = 0x1503,\n GL_AND_INVERTED                   = 0x1504,\n GL_NOOP                           = 0x1505,\n GL_XOR                            = 0x1506,\n GL_OR                             = 0x1507,\n GL_NOR                            = 0x1508,\n GL_EQUIV                          = 0x1509,\n GL_INVERT                         = 0x150A,\n GL_OR_REVERSE                     = 0x150B,\n GL_COPY_INVERTED                  = 0x150C,\n GL_OR_INVERTED                    = 0x150D,\n GL_NAND                           = 0x150E,\n GL_SET                            = 0x150F,\n GL_EMISSION                       = 0x1600,\n GL_SHININESS                      = 0x1601,\n GL_AMBIENT_AND_DIFFUSE            = 0x1602,\n GL_COLOR_INDEXES                  = 0x1603,\n GL_MODELVIEW                      = 0x1700,\n GL_PROJECTION                     = 0x1701,\n GL_TEXTURE                        = 0x1702,\n GL_COLOR                          = 0x1800,\n GL_DEPTH                          = 0x1801,\n GL_STENCIL                        = 0x1802,\n GL_COLOR_INDEX                    = 0x1900,\n GL_STENCIL_INDEX                  = 0x1901,\n GL_DEPTH_COMPONENT                = 0x1902,\n GL_RED                            = 0x1903,\n GL_GREEN                          = 0x1904,\n GL_BLUE                           = 0x1905,\n GL_ALPHA                          = 0x1906,\n GL_RGB                            = 0x1907,\n GL_RGBA                           = 0x1908,\n GL_LUMINANCE                      = 0x1909,\n GL_LUMINANCE_ALPHA                = 0x190A,\n GL_BITMAP                         = 0x1A00,\n GL_POINT                          = 0x1B00,\n GL_LINE                           = 0x1B01,\n GL_FILL                           = 0x1B02,\n GL_RENDER                         = 0x1C00,\n GL_FEEDBACK                       = 0x1C01,\n GL_SELECT                         = 0x1C02,\n GL_FLAT                           = 0x1D00,\n GL_SMOOTH                         = 0x1D01,\n GL_KEEP                           = 0x1E00,\n GL_REPLACE                        = 0x1E01,\n GL_INCR                           = 0x1E02,\n GL_DECR                           = 0x1E03,\n GL_VENDOR                         = 0x1F00,\n GL_RENDERER                       = 0x1F01,\n GL_VERSION                        = 0x1F02,\n GL_EXTENSIONS                     = 0x1F03,\n GL_S                              = 0x2000,\n GL_T                              = 0x2001,\n GL_R                              = 0x2002,\n GL_Q                              = 0x2003,\n GL_MODULATE                       = 0x2100,\n GL_DECAL                          = 0x2101,\n GL_TEXTURE_ENV_MODE               = 0x2200,\n GL_TEXTURE_ENV_COLOR              = 0x2201,\n GL_TEXTURE_ENV                    = 0x2300,\n GL_EYE_LINEAR                     = 0x2400,\n GL_OBJECT_LINEAR                  = 0x2401,\n GL_SPHERE_MAP                     = 0x2402,\n GL_TEXTURE_GEN_MODE               = 0x2500,\n GL_OBJECT_PLANE                   = 0x2501,\n GL_EYE_PLANE                      = 0x2502,\n GL_NEAREST                        = 0x2600,\n GL_LINEAR                         = 0x2601,\n GL_NEAREST_MIPMAP_NEAREST         = 0x2700,\n GL_LINEAR_MIPMAP_NEAREST          = 0x2701,\n GL_NEAREST_MIPMAP_LINEAR          = 0x2702,\n GL_LINEAR_MIPMAP_LINEAR           = 0x2703,\n GL_TEXTURE_MAG_FILTER             = 0x2800,\n GL_TEXTURE_MIN_FILTER             = 0x2801,\n GL_TEXTURE_WRAP_S                 = 0x2802,\n GL_TEXTURE_WRAP_T                 = 0x2803,\n GL_CLAMP                          = 0x2900,\n GL_REPEAT                         = 0x2901,\n GL_CLIENT_PIXEL_STORE_BIT         = 0x00000001,\n GL_CLIENT_VERTEX_ARRAY_BIT        = 0x00000002,\n GL_CLIENT_ALL_ATTRIB_BITS         = 0xffffffff,\n GL_POLYGON_OFFSET_FACTOR          = 0x8038,\n GL_POLYGON_OFFSET_UNITS           = 0x2A00,\n GL_POLYGON_OFFSET_POINT           = 0x2A01,\n GL_POLYGON_OFFSET_LINE            = 0x2A02,\n GL_POLYGON_OFFSET_FILL            = 0x8037,\n GL_ALPHA4                         = 0x803B,\n GL_ALPHA8                         = 0x803C,\n GL_ALPHA12                        = 0x803D,\n GL_ALPHA16                        = 0x803E,\n GL_LUMINANCE4                     = 0x803F,\n GL_LUMINANCE8                     = 0x8040,\n GL_LUMINANCE12                    = 0x8041,\n GL_LUMINANCE16                    = 0x8042,\n GL_LUMINANCE4_ALPHA4              = 0x8043,\n GL_LUMINANCE6_ALPHA2              = 0x8044,\n GL_LUMINANCE8_ALPHA8              = 0x8045,\n GL_LUMINANCE12_ALPHA4             = 0x8046,\n GL_LUMINANCE12_ALPHA12            = 0x8047,\n GL_LUMINANCE16_ALPHA16            = 0x8048,\n GL_INTENSITY                      = 0x8049,\n GL_INTENSITY4                     = 0x804A,\n GL_INTENSITY8                     = 0x804B,\n GL_INTENSITY12                    = 0x804C,\n GL_INTENSITY16                    = 0x804D,\n GL_R3_G3_B2                       = 0x2A10,\n GL_RGB4                           = 0x804F,\n GL_RGB5                           = 0x8050,\n GL_RGB8                           = 0x8051,\n GL_RGB10                          = 0x8052,\n GL_RGB12                          = 0x8053,\n GL_RGB16                          = 0x8054,\n GL_RGBA2                          = 0x8055,\n GL_RGBA4                          = 0x8056,\n GL_RGB5_A1                        = 0x8057,\n GL_RGBA8                          = 0x8058,\n GL_RGB10_A2                       = 0x8059,\n GL_RGBA12                         = 0x805A,\n GL_RGBA16                         = 0x805B,\n GL_TEXTURE_RED_SIZE               = 0x805C,\n GL_TEXTURE_GREEN_SIZE             = 0x805D,\n GL_TEXTURE_BLUE_SIZE              = 0x805E,\n GL_TEXTURE_ALPHA_SIZE             = 0x805F,\n GL_TEXTURE_LUMINANCE_SIZE         = 0x8060,\n GL_TEXTURE_INTENSITY_SIZE         = 0x8061,\n GL_PROXY_TEXTURE_1D               = 0x8063,\n GL_PROXY_TEXTURE_2D               = 0x8064,\n GL_TEXTURE_PRIORITY               = 0x8066,\n GL_TEXTURE_RESIDENT               = 0x8067,\n GL_TEXTURE_BINDING_1D             = 0x8068,\n GL_TEXTURE_BINDING_2D             = 0x8069,\n GL_TEXTURE_BINDING_3D             = 0x806A,\n GL_VERTEX_ARRAY                   = 0x8074,\n GL_NORMAL_ARRAY                   = 0x8075,\n GL_COLOR_ARRAY                    = 0x8076,\n GL_INDEX_ARRAY                    = 0x8077,\n GL_TEXTURE_COORD_ARRAY            = 0x8078,\n GL_EDGE_FLAG_ARRAY                = 0x8079,\n GL_VERTEX_ARRAY_SIZE              = 0x807A,\n GL_VERTEX_ARRAY_TYPE              = 0x807B,\n GL_VERTEX_ARRAY_STRIDE            = 0x807C,\n GL_NORMAL_ARRAY_TYPE              = 0x807E,\n GL_NORMAL_ARRAY_STRIDE            = 0x807F,\n GL_COLOR_ARRAY_SIZE               = 0x8081,\n GL_COLOR_ARRAY_TYPE               = 0x8082,\n GL_COLOR_ARRAY_STRIDE             = 0x8083,\n GL_INDEX_ARRAY_TYPE               = 0x8085,\n GL_INDEX_ARRAY_STRIDE             = 0x8086,\n GL_TEXTURE_COORD_ARRAY_SIZE       = 0x8088,\n GL_TEXTURE_COORD_ARRAY_TYPE       = 0x8089,\n GL_TEXTURE_COORD_ARRAY_STRIDE     = 0x808A,\n GL_EDGE_FLAG_ARRAY_STRIDE         = 0x808C,\n GL_VERTEX_ARRAY_POINTER           = 0x808E,\n GL_NORMAL_ARRAY_POINTER           = 0x808F,\n GL_COLOR_ARRAY_POINTER            = 0x8090,\n GL_INDEX_ARRAY_POINTER            = 0x8091,\n GL_TEXTURE_COORD_ARRAY_POINTER    = 0x8092,\n GL_EDGE_FLAG_ARRAY_POINTER        = 0x8093,\n GL_V2F                            = 0x2A20,\n GL_V3F                            = 0x2A21,\n GL_C4UB_V2F                       = 0x2A22,\n GL_C4UB_V3F                       = 0x2A23,\n GL_C3F_V3F                        = 0x2A24,\n GL_N3F_V3F                        = 0x2A25,\n GL_C4F_N3F_V3F                    = 0x2A26,\n GL_T2F_V3F                        = 0x2A27,\n GL_T4F_V4F                        = 0x2A28,\n GL_T2F_C4UB_V3F                   = 0x2A29,\n GL_T2F_C3F_V3F                    = 0x2A2A,\n GL_T2F_N3F_V3F                    = 0x2A2B,\n GL_T2F_C4F_N3F_V3F                = 0x2A2C,\n GL_T4F_C4F_N3F_V4F                = 0x2A2D,\n GL_BGR                            = 0x80E0,\n GL_BGRA                           = 0x80E1,\n GL_CONSTANT_COLOR                 = 0x8001,\n GL_ONE_MINUS_CONSTANT_COLOR       = 0x8002,\n GL_CONSTANT_ALPHA                 = 0x8003,\n GL_ONE_MINUS_CONSTANT_ALPHA       = 0x8004,\n GL_BLEND_COLOR                    = 0x8005,\n GL_FUNC_ADD                       = 0x8006,\n GL_MIN                            = 0x8007,\n GL_MAX                            = 0x8008,\n GL_BLEND_EQUATION                 = 0x8009,\n GL_BLEND_EQUATION_RGB             = 0x8009,\n GL_BLEND_EQUATION_ALPHA           = 0x883D,\n GL_FUNC_SUBTRACT                  = 0x800A,\n GL_FUNC_REVERSE_SUBTRACT          = 0x800B,\n GL_COLOR_MATRIX                   = 0x80B1,\n GL_COLOR_MATRIX_STACK_DEPTH       = 0x80B2,\n GL_MAX_COLOR_MATRIX_STACK_DEPTH   = 0x80B3,\n GL_POST_COLOR_MATRIX_RED_SCALE    = 0x80B4,\n GL_POST_COLOR_MATRIX_GREEN_SCALE  = 0x80B5,\n GL_POST_COLOR_MATRIX_BLUE_SCALE   = 0x80B6,\n GL_POST_COLOR_MATRIX_ALPHA_SCALE  = 0x80B7,\n GL_POST_COLOR_MATRIX_RED_BIAS     = 0x80B8,\n GL_POST_COLOR_MATRIX_GREEN_BIAS   = 0x80B9,\n GL_POST_COLOR_MATRIX_BLUE_BIAS    = 0x80BA,\n GL_POST_COLOR_MATRIX_ALPHA_BIAS   = 0x80BB,\n GL_COLOR_TABLE                    = 0x80D0,\n GL_POST_CONVOLUTION_COLOR_TABLE   = 0x80D1,\n GL_POST_COLOR_MATRIX_COLOR_TABLE  = 0x80D2,\n GL_PROXY_COLOR_TABLE              = 0x80D3,\n GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,\n GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,\n GL_COLOR_TABLE_SCALE              = 0x80D6,\n GL_COLOR_TABLE_BIAS               = 0x80D7,\n GL_COLOR_TABLE_FORMAT             = 0x80D8,\n GL_COLOR_TABLE_WIDTH              = 0x80D9,\n GL_COLOR_TABLE_RED_SIZE           = 0x80DA,\n GL_COLOR_TABLE_GREEN_SIZE         = 0x80DB,\n GL_COLOR_TABLE_BLUE_SIZE          = 0x80DC,\n GL_COLOR_TABLE_ALPHA_SIZE         = 0x80DD,\n GL_COLOR_TABLE_LUMINANCE_SIZE     = 0x80DE,\n GL_COLOR_TABLE_INTENSITY_SIZE     = 0x80DF,\n GL_CONVOLUTION_1D                 = 0x8010,\n GL_CONVOLUTION_2D                 = 0x8011,\n GL_SEPARABLE_2D                   = 0x8012,\n GL_CONVOLUTION_BORDER_MODE        = 0x8013,\n GL_CONVOLUTION_FILTER_SCALE       = 0x8014,\n GL_CONVOLUTION_FILTER_BIAS        = 0x8015,\n GL_REDUCE                         = 0x8016,\n GL_CONVOLUTION_FORMAT             = 0x8017,\n GL_CONVOLUTION_WIDTH              = 0x8018,\n GL_CONVOLUTION_HEIGHT             = 0x8019,\n GL_MAX_CONVOLUTION_WIDTH          = 0x801A,\n GL_MAX_CONVOLUTION_HEIGHT         = 0x801B,\n GL_POST_CONVOLUTION_RED_SCALE     = 0x801C,\n GL_POST_CONVOLUTION_GREEN_SCALE   = 0x801D,\n GL_POST_CONVOLUTION_BLUE_SCALE    = 0x801E,\n GL_POST_CONVOLUTION_ALPHA_SCALE   = 0x801F,\n GL_POST_CONVOLUTION_RED_BIAS      = 0x8020,\n GL_POST_CONVOLUTION_GREEN_BIAS    = 0x8021,\n GL_POST_CONVOLUTION_BLUE_BIAS     = 0x8022,\n GL_POST_CONVOLUTION_ALPHA_BIAS    = 0x8023,\n GL_CONSTANT_BORDER                = 0x8151,\n GL_REPLICATE_BORDER               = 0x8153,\n GL_CONVOLUTION_BORDER_COLOR       = 0x8154,\n GL_MAX_ELEMENTS_VERTICES          = 0x80E8,\n GL_MAX_ELEMENTS_INDICES           = 0x80E9,\n GL_HISTOGRAM                      = 0x8024,\n GL_PROXY_HISTOGRAM                = 0x8025,\n GL_HISTOGRAM_WIDTH                = 0x8026,\n GL_HISTOGRAM_FORMAT               = 0x8027,\n GL_HISTOGRAM_RED_SIZE             = 0x8028,\n GL_HISTOGRAM_GREEN_SIZE           = 0x8029,\n GL_HISTOGRAM_BLUE_SIZE            = 0x802A,\n GL_HISTOGRAM_ALPHA_SIZE           = 0x802B,\n GL_HISTOGRAM_LUMINANCE_SIZE       = 0x802C,\n GL_HISTOGRAM_SINK                 = 0x802D,\n GL_MINMAX                         = 0x802E,\n GL_MINMAX_FORMAT                  = 0x802F,\n GL_MINMAX_SINK                    = 0x8030,\n GL_TABLE_TOO_LARGE                = 0x8031,\n GL_UNSIGNED_BYTE_3_3_2            = 0x8032,\n GL_UNSIGNED_SHORT_4_4_4_4         = 0x8033,\n GL_UNSIGNED_SHORT_5_5_5_1         = 0x8034,\n GL_UNSIGNED_INT_8_8_8_8           = 0x8035,\n GL_UNSIGNED_INT_10_10_10_2        = 0x8036,\n GL_UNSIGNED_BYTE_2_3_3_REV        = 0x8362,\n GL_UNSIGNED_SHORT_5_6_5           = 0x8363,\n GL_UNSIGNED_SHORT_5_6_5_REV       = 0x8364,\n GL_UNSIGNED_SHORT_4_4_4_4_REV     = 0x8365,\n GL_UNSIGNED_SHORT_1_5_5_5_REV     = 0x8366,\n GL_UNSIGNED_INT_8_8_8_8_REV       = 0x8367,\n GL_UNSIGNED_INT_2_10_10_10_REV    = 0x8368,\n GL_RESCALE_NORMAL                 = 0x803A,\n GL_LIGHT_MODEL_COLOR_CONTROL      = 0x81F8,\n GL_SINGLE_COLOR                   = 0x81F9,\n GL_SEPARATE_SPECULAR_COLOR        = 0x81FA,\n GL_PACK_SKIP_IMAGES               = 0x806B,\n GL_PACK_IMAGE_HEIGHT              = 0x806C,\n GL_UNPACK_SKIP_IMAGES             = 0x806D,\n GL_UNPACK_IMAGE_HEIGHT            = 0x806E,\n GL_TEXTURE_3D                     = 0x806F,\n GL_PROXY_TEXTURE_3D               = 0x8070,\n GL_TEXTURE_DEPTH                  = 0x8071,\n GL_TEXTURE_WRAP_R                 = 0x8072,\n GL_MAX_3D_TEXTURE_SIZE            = 0x8073,\n GL_CLAMP_TO_EDGE                  = 0x812F,\n GL_CLAMP_TO_BORDER                = 0x812D,\n GL_TEXTURE_MIN_LOD                = 0x813A,\n GL_TEXTURE_MAX_LOD                = 0x813B,\n GL_TEXTURE_BASE_LEVEL             = 0x813C,\n GL_TEXTURE_MAX_LEVEL              = 0x813D,\n GL_SMOOTH_POINT_SIZE_RANGE        = 0x0B12,\n GL_SMOOTH_POINT_SIZE_GRANULARITY  = 0x0B13,\n GL_SMOOTH_LINE_WIDTH_RANGE        = 0x0B22,\n GL_SMOOTH_LINE_WIDTH_GRANULARITY  = 0x0B23,\n GL_ALIASED_POINT_SIZE_RANGE       = 0x846D,\n GL_ALIASED_LINE_WIDTH_RANGE       = 0x846E,\n GL_TEXTURE0                       = 0x84C0,\n GL_TEXTURE1                       = 0x84C1,\n GL_TEXTURE2                       = 0x84C2,\n GL_TEXTURE3                       = 0x84C3,\n GL_TEXTURE4                       = 0x84C4,\n GL_TEXTURE5                       = 0x84C5,\n GL_TEXTURE6                       = 0x84C6,\n GL_TEXTURE7                       = 0x84C7,\n GL_TEXTURE8                       = 0x84C8,\n GL_TEXTURE9                       = 0x84C9,\n GL_TEXTURE10                      = 0x84CA,\n GL_TEXTURE11                      = 0x84CB,\n GL_TEXTURE12                      = 0x84CC,\n GL_TEXTURE13                      = 0x84CD,\n GL_TEXTURE14                      = 0x84CE,\n GL_TEXTURE15                      = 0x84CF,\n GL_TEXTURE16                      = 0x84D0,\n GL_TEXTURE17                      = 0x84D1,\n GL_TEXTURE18                      = 0x84D2,\n GL_TEXTURE19                      = 0x84D3,\n GL_TEXTURE20                      = 0x84D4,\n GL_TEXTURE21                      = 0x84D5,\n GL_TEXTURE22                      = 0x84D6,\n GL_TEXTURE23                      = 0x84D7,\n GL_TEXTURE24                      = 0x84D8,\n GL_TEXTURE25                      = 0x84D9,\n GL_TEXTURE26                      = 0x84DA,\n GL_TEXTURE27                      = 0x84DB,\n GL_TEXTURE28                      = 0x84DC,\n GL_TEXTURE29                      = 0x84DD,\n GL_TEXTURE30                      = 0x84DE,\n GL_TEXTURE31                      = 0x84DF,\n GL_ACTIVE_TEXTURE                 = 0x84E0,\n GL_CLIENT_ACTIVE_TEXTURE          = 0x84E1,\n GL_MAX_TEXTURE_UNITS              = 0x84E2,\n GL_COMBINE                        = 0x8570,\n GL_COMBINE_RGB                    = 0x8571,\n GL_COMBINE_ALPHA                  = 0x8572,\n GL_RGB_SCALE                      = 0x8573,\n GL_ADD_SIGNED                     = 0x8574,\n GL_INTERPOLATE                    = 0x8575,\n GL_CONSTANT                       = 0x8576,\n GL_PRIMARY_COLOR                  = 0x8577,\n GL_PREVIOUS                       = 0x8578,\n GL_SUBTRACT                       = 0x84E7,\n GL_SR0_RGB                       = 0x8580,\n GL_SRC1_RGB                       = 0x8581,\n GL_SRC2_RGB                       = 0x8582,\n GL_SRC3_RGB                       = 0x8583,\n GL_SRC4_RGB                       = 0x8584,\n GL_SRC5_RGB                       = 0x8585,\n GL_SRC6_RGB                       = 0x8586,\n GL_SRC7_RGB                       = 0x8587,\n GL_SRC0_ALPHA                     = 0x8588,\n GL_SRC1_ALPHA                     = 0x8589,\n GL_SRC2_ALPHA                     = 0x858A,\n GL_SRC3_ALPHA                     = 0x858B,\n GL_SRC4_ALPHA                     = 0x858C,\n GL_SRC5_ALPHA                     = 0x858D,\n GL_SRC6_ALPHA                     = 0x858E,\n GL_SRC7_ALPHA                     = 0x858F,\n GL_SOURCE0_RGB                    = 0x8580,\n GL_SOURCE1_RGB                    = 0x8581,\n GL_SOURCE2_RGB                    = 0x8582,\n GL_SOURCE3_RGB                    = 0x8583,\n GL_SOURCE4_RGB                    = 0x8584,\n GL_SOURCE5_RGB                    = 0x8585,\n GL_SOURCE6_RGB                    = 0x8586,\n GL_SOURCE7_RGB                    = 0x8587,\n GL_SOURCE0_ALPHA                  = 0x8588,\n GL_SOURCE1_ALPHA                  = 0x8589,\n GL_SOURCE2_ALPHA                  = 0x858A,\n GL_SOURCE3_ALPHA                  = 0x858B,\n GL_SOURCE4_ALPHA                  = 0x858C,\n GL_SOURCE5_ALPHA                  = 0x858D,\n GL_SOURCE6_ALPHA                  = 0x858E,\n GL_SOURCE7_ALPHA                  = 0x858F,\n GL_OPERAND0_RGB                   = 0x8590,\n GL_OPERAND1_RGB                   = 0x8591,\n GL_OPERAND2_RGB                   = 0x8592,\n GL_OPERAND3_RGB                   = 0x8593,\n GL_OPERAND4_RGB                   = 0x8594,\n GL_OPERAND5_RGB                   = 0x8595,\n GL_OPERAND6_RGB                   = 0x8596,\n GL_OPERAND7_RGB                   = 0x8597,\n GL_OPERAND0_ALPHA                 = 0x8598,\n GL_OPERAND1_ALPHA                 = 0x8599,\n GL_OPERAND2_ALPHA                 = 0x859A,\n GL_OPERAND3_ALPHA                 = 0x859B,\n GL_OPERAND4_ALPHA                 = 0x859C,\n GL_OPERAND5_ALPHA                 = 0x859D,\n GL_OPERAND6_ALPHA                 = 0x859E,\n GL_OPERAND7_ALPHA                 = 0x859F,\n GL_DOT3_RGB                       = 0x86AE,\n GL_DOT3_RGBA                      = 0x86AF,\n GL_TRANSPOSE_MODELVIEW_MATRIX     = 0x84E3,\n GL_TRANSPOSE_PROJECTION_MATRIX    = 0x84E4,\n GL_TRANSPOSE_TEXTURE_MATRIX       = 0x84E5,\n GL_TRANSPOSE_COLOR_MATRIX         = 0x84E6,\n GL_NORMAL_MAP                     = 0x8511,\n GL_REFLECTION_MAP                 = 0x8512,\n GL_TEXTURE_CUBE_MAP               = 0x8513,\n GL_TEXTURE_BINDING_CUBE_MAP       = 0x8514,\n GL_TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515,\n GL_TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516,\n GL_TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517,\n GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518,\n GL_TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519,\n GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A,\n GL_PROXY_TEXTURE_CUBE_MAP         = 0x851B,\n GL_MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C,\n GL_COMPRESSED_ALPHA               = 0x84E9,\n GL_COMPRESSED_LUMINANCE           = 0x84EA,\n GL_COMPRESSED_LUMINANCE_ALPHA     = 0x84EB,\n GL_COMPRESSED_INTENSITY           = 0x84EC,\n GL_COMPRESSED_RGB                 = 0x84ED,\n GL_COMPRESSED_RGBA                = 0x84EE,\n GL_TEXTURE_COMPRESSION_HINT       = 0x84EF,\n GL_TEXTURE_COMPRESSED_IMAGE_SIZE  = 0x86A0,\n GL_TEXTURE_COMPRESSED             = 0x86A1,\n GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,\n GL_COMPRESSED_TEXTURE_FORMATS     = 0x86A3,\n GL_MULTISAMPLE                    = 0x809D,\n GL_SAMPLE_ALPHA_TO_COVERAGE       = 0x809E,\n GL_SAMPLE_ALPHA_TO_ONE            = 0x809F,\n GL_SAMPLE_COVERAGE                = 0x80A0,\n GL_SAMPLE_BUFFERS                 = 0x80A8,\n GL_SAMPLES                        = 0x80A9,\n GL_SAMPLE_COVERAGE_VALUE          = 0x80AA,\n GL_SAMPLE_COVERAGE_INVERT         = 0x80AB,\n GL_MULTISAMPLE_BIT                = 0x20000000,\n GL_DEPTH_COMPONENT16              = 0x81A5,\n GL_DEPTH_COMPONENT24              = 0x81A6,\n GL_DEPTH_COMPONENT32              = 0x81A7,\n GL_TEXTURE_DEPTH_SIZE             = 0x884A,\n GL_DEPTH_TEXTURE_MODE             = 0x884B,\n GL_TEXTURE_COMPARE_MODE           = 0x884C,\n GL_TEXTURE_COMPARE_FUNC           = 0x884D,\n GL_COMPARE_R_TO_TEXTURE           = 0x884E,\n GL_QUERY_COUNTER_BITS             = 0x8864,\n GL_CURRENT_QUERY                  = 0x8865,\n GL_QUERY_RESULT                   = 0x8866,\n GL_QUERY_RESULT_AVAILABLE         = 0x8867,\n GL_SAMPLES_PASSED                 = 0x8914,\n GL_FOG_COORD_SRC                  = 0x8450,\n GL_FOG_COORD                      = 0x8451,\n GL_FRAGMENT_DEPTH                 = 0x8452,\n GL_CURRENT_FOG_COORD              = 0x8453  ,\n GL_FOG_COORD_ARRAY_TYPE           = 0x8454,\n GL_FOG_COORD_ARRAY_STRIDE         = 0x8455,\n GL_FOG_COORD_ARRAY_POINTER        = 0x8456,\n GL_FOG_COORD_ARRAY                = 0x8457,\n GL_FOG_COORDINATE_SOURCE          = 0x8450,\n GL_FOG_COORDINATE                 = 0x8451,\n GL_CURRENT_FOG_COORDINATE         = 0x8453  ,\n GL_FOG_COORDINATE_ARRAY_TYPE      = 0x8454,\n GL_FOG_COORDINATE_ARRAY_STRIDE    = 0x8455,\n GL_FOG_COORDINATE_ARRAY_POINTER   = 0x8456,\n GL_FOG_COORDINATE_ARRAY           = 0x8457,\n GL_COLOR_SUM                      = 0x8458,\n GL_CURRENT_SECONDARY_COLOR        = 0x8459,\n GL_SECONDARY_COLOR_ARRAY_SIZE     = 0x845A,\n GL_SECONDARY_COLOR_ARRAY_TYPE     = 0x845B,\n GL_SECONDARY_COLOR_ARRAY_STRIDE   = 0x845C,\n GL_SECONDARY_COLOR_ARRAY_POINTER  = 0x845D,\n GL_SECONDARY_COLOR_ARRAY          = 0x845E,\n GL_POINT_SIZE_MIN                 = 0x8126,\n GL_POINT_SIZE_MAX                 = 0x8127,\n GL_POINT_FADE_THRESHOLD_SIZE      = 0x8128,\n GL_POINT_DISTANCE_ATTENUATION     = 0x8129,\n GL_BLEND_DST_RGB                  = 0x80C8,\n GL_BLEND_SRC_RGB                  = 0x80C9,\n GL_BLEND_DST_ALPHA                = 0x80CA,\n GL_BLEND_SRC_ALPHA                = 0x80CB,\n GL_GENERATE_MIPMAP                = 0x8191,\n GL_GENERATE_MIPMAP_HINT           = 0x8192,\n GL_INCR_WRAP                      = 0x8507,\n GL_DECR_WRAP                      = 0x8508,\n GL_MIRRORED_REPEAT                = 0x8370,\n GL_MAX_TEXTURE_LOD_BIAS           = 0x84FD,\n GL_TEXTURE_FILTER_CONTROL         = 0x8500,\n GL_TEXTURE_LOD_BIAS               = 0x8501,\n GL_ARRAY_BUFFER                                = 0x8892,\n GL_ELEMENT_ARRAY_BUFFER                        = 0x8893,\n GL_ARRAY_BUFFER_BINDING                        = 0x8894,\n GL_ELEMENT_ARRAY_BUFFER_BINDING                = 0x8895,\n GL_VERTEX_ARRAY_BUFFER_BINDING                 = 0x8896,\n GL_NORMAL_ARRAY_BUFFER_BINDING                 = 0x8897,\n GL_COLOR_ARRAY_BUFFER_BINDING                  = 0x8898,\n GL_INDEX_ARRAY_BUFFER_BINDING                  = 0x8899,\n GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING          = 0x889A,\n GL_EDGE_FLAG_ARRAY_BUFFER_BINDING              = 0x889B,\n GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING        = 0x889C,\n GL_FOG_COORD_ARRAY_BUFFER_BINDING              = 0x889D,\n GL_WEIGHT_ARRAY_BUFFER_BINDING                 = 0x889E,\n GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING          = 0x889F,\n GL_STREAM_DRAW                                 = 0x88E0,\n GL_STREAM_READ                                 = 0x88E1,\n GL_STREAM_COPY                                 = 0x88E2,\n GL_STATIC_DRAW                                 = 0x88E4,\n GL_STATIC_READ                                 = 0x88E5,\n GL_STATIC_COPY                                 = 0x88E6,\n GL_DYNAMIC_DRAW                                = 0x88E8,\n GL_DYNAMIC_READ                                = 0x88E9,\n GL_DYNAMIC_COPY                                = 0x88EA,\n GL_READ_ONLY                                   = 0x88B8,\n GL_WRITE_ONLY                                  = 0x88B9,\n GL_READ_WRITE                                  = 0x88BA,\n GL_BUFFER_SIZE                                 = 0x8764,\n GL_BUFFER_USAGE                                = 0x8765,\n GL_BUFFER_ACCESS                               = 0x88BB,\n GL_BUFFER_MAPPED                               = 0x88BC,\n GL_BUFFER_MAP_POINTER                          = 0x88BD,\n GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING         = 0x889D,\n GL_CURRENT_PROGRAM                = 0x8B8D,\n GL_SHADER_TYPE                    = 0x8B4F,\n GL_DELETE_STATUS                  = 0x8B80,\n GL_COMPILE_STATUS                 = 0x8B81,\n GL_LINK_STATUS                    = 0x8B82,\n GL_VALIDATE_STATUS                = 0x8B83,\n GL_INFO_LOG_LENGTH                = 0x8B84,\n GL_ATTACHED_SHADERS               = 0x8B85,\n GL_ACTIVE_UNIFORMS                = 0x8B86,\n GL_ACTIVE_UNIFORM_MAX_LENGTH      = 0x8B87,\n GL_SHADER_SOURCE_LENGTH           = 0x8B88,\n GL_FLOAT_VEC2                     = 0x8B50,\n GL_FLOAT_VEC3                     = 0x8B51,\n GL_FLOAT_VEC4                     = 0x8B52,\n GL_INT_VEC2                       = 0x8B53,\n GL_INT_VEC3                       = 0x8B54,\n GL_INT_VEC4                       = 0x8B55,\n GL_BOOL                           = 0x8B56,\n GL_BOOL_VEC2                      = 0x8B57,\n GL_BOOL_VEC3                      = 0x8B58,\n GL_BOOL_VEC4                      = 0x8B59,\n GL_FLOAT_MAT2                     = 0x8B5A,\n GL_FLOAT_MAT3                     = 0x8B5B,\n GL_FLOAT_MAT4                     = 0x8B5C,\n GL_SAMPLER_1D                     = 0x8B5D,\n GL_SAMPLER_2D                     = 0x8B5E,\n GL_SAMPLER_3D                     = 0x8B5F,\n GL_SAMPLER_CUBE                   = 0x8B60,\n GL_SAMPLER_1D_SHADOW              = 0x8B61,\n GL_SAMPLER_2D_SHADOW              = 0x8B62,\n GL_SHADING_LANGUAGE_VERSION       = 0x8B8C,\n GL_VERTEX_SHADER                  = 0x8B31,\n GL_MAX_VERTEX_UNIFORM_COMPONENTS  = 0x8B4A,\n GL_MAX_VARYING_FLOATS             = 0x8B4B,\n GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,\n GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,\n GL_ACTIVE_ATTRIBUTES              = 0x8B89,\n GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    = 0x8B8A,\n GL_FRAGMENT_SHADER                = 0x8B30,\n GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,\n GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,\n GL_MAX_VERTEX_ATTRIBS             = 0x8869,\n GL_VERTEX_ATTRIB_ARRAY_ENABLED    = 0x8622,\n GL_VERTEX_ATTRIB_ARRAY_SIZE       = 0x8623,\n GL_VERTEX_ATTRIB_ARRAY_STRIDE     = 0x8624,\n GL_VERTEX_ATTRIB_ARRAY_TYPE       = 0x8625,\n GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,\n GL_CURRENT_VERTEX_ATTRIB          = 0x8626,\n GL_VERTEX_ATTRIB_ARRAY_POINTER    = 0x8645,\n GL_VERTEX_PROGRAM_POINT_SIZE      = 0x8642,\n GL_VERTEX_PROGRAM_TWO_SIDE        = 0x8643,\n GL_MAX_TEXTURE_COORDS             = 0x8871,\n GL_MAX_TEXTURE_IMAGE_UNITS        = 0x8872,\n GL_MAX_DRAW_BUFFERS               = 0x8824,\n GL_DRAW_BUFFER0                   = 0x8825,\n GL_DRAW_BUFFER1                   = 0x8826,\n GL_DRAW_BUFFER2                   = 0x8827,\n GL_DRAW_BUFFER3                   = 0x8828,\n GL_DRAW_BUFFER4                   = 0x8829,\n GL_DRAW_BUFFER5                   = 0x882A,\n GL_DRAW_BUFFER6                   = 0x882B,\n GL_DRAW_BUFFER7                   = 0x882C,\n GL_DRAW_BUFFER8                   = 0x882D,\n GL_DRAW_BUFFER9                   = 0x882E,\n GL_DRAW_BUFFER10                  = 0x882F,\n GL_DRAW_BUFFER11                  = 0x8830,\n GL_DRAW_BUFFER12                  = 0x8831,\n GL_DRAW_BUFFER13                  = 0x8832,\n GL_DRAW_BUFFER14                  = 0x8833,\n GL_DRAW_BUFFER15                  = 0x8834,\n GL_POINT_SPRITE                   = 0x8861,\n GL_COORD_REPLACE                  = 0x8862,\n GL_POINT_SPRITE_COORD_ORIGIN      = 0x8CA0,\n GL_LOWER_LEFT                     = 0x8CA1,\n GL_UPPER_LEFT                     = 0x8CA2,\n GL_STENCIL_BACK_FUNC              = 0x8800,\n GL_STENCIL_BACK_VALUE_MASK        = 0x8CA4,\n GL_STENCIL_BACK_REF               = 0x8CA3,\n GL_STENCIL_BACK_FAIL              = 0x8801,\n GL_STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802,\n GL_STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803,\n GL_STENCIL_BACK_WRITEMASK         = 0x8CA5,\n GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F,\n GL_PIXEL_PACK_BUFFER              = 0x88EB,\n GL_PIXEL_UNPACK_BUFFER            = 0x88EC,\n GL_PIXEL_PACK_BUFFER_BINDING      = 0x88ED,\n GL_PIXEL_UNPACK_BUFFER_BINDING    = 0x88EF,\n GL_FLOAT_MAT2x3                   = 0x8B65,\n GL_FLOAT_MAT2x4                   = 0x8B66,\n GL_FLOAT_MAT3x2                   = 0x8B67,\n GL_FLOAT_MAT3x4                   = 0x8B68,\n GL_FLOAT_MAT4x2                   = 0x8B69,\n GL_FLOAT_MAT4x3                   = 0x8B6A,\n GL_SRGB                           = 0x8C40,\n GL_SRGB8                          = 0x8C41,\n GL_SRGB_ALPHA                     = 0x8C42,\n GL_SRGB8_ALPHA8                   = 0x8C43,\n GL_SLUMINANCE_ALPHA               = 0x8C44,\n GL_SLUMINANCE8_ALPHA8             = 0x8C45,\n GL_SLUMINANCE                     = 0x8C46,\n GL_SLUMINANCE8                    = 0x8C47,\n GL_COMPRESSED_SRGB                = 0x8C48,\n GL_COMPRESSED_SRGB_ALPHA          = 0x8C49,\n GL_COMPRESSED_SLUMINANCE          = 0x8C4A,\n GL_COMPRESSED_SLUMINANCE_ALPHA    = 0x8C4B,\n};\ntypedef unsigned int GLenum;\ntypedef unsigned char GLboolean;\ntypedef unsigned int GLbitfield;\ntypedef signed char GLbyte;\ntypedef short GLshort;\ntypedef int GLint;\ntypedef int GLsizei;\ntypedef unsigned char GLubyte;\ntypedef unsigned short GLushort;\ntypedef unsigned int GLuint;\ntypedef float GLfloat;\ntypedef float GLclampf;\ntypedef double GLdouble;\ntypedef double GLclampd;\ntypedef void GLvoid;\ntypedef long GLintptr;\ntypedef long GLsizeiptr;\ntypedef char GLchar;\ntypedef char GLcharARB;\ntypedef void *GLhandleARB;\ntypedef long GLintptrARB;\ntypedef long GLsizeiptrARB;\ntypedef unsigned short GLhalfARB;\ntypedef unsigned short GLhalf;\nvoid glActiveTextureARB (GLenum);\nvoid glClientActiveTextureARB (GLenum);\nvoid glMultiTexCoord1dARB (GLenum, GLdouble);\nvoid glMultiTexCoord1dvARB (GLenum, const GLdouble *);\nvoid glMultiTexCoord1fARB (GLenum, GLfloat);\nvoid glMultiTexCoord1fvARB (GLenum, const GLfloat *);\nvoid glMultiTexCoord1iARB (GLenum, GLint);\nvoid glMultiTexCoord1ivARB (GLenum, const GLint *);\nvoid glMultiTexCoord1sARB (GLenum, GLshort);\nvoid glMultiTexCoord1svARB (GLenum, const GLshort *);\nvoid glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble);\nvoid glMultiTexCoord2dvARB (GLenum, const GLdouble *);\nvoid glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat);\nvoid glMultiTexCoord2fvARB (GLenum, const GLfloat *);\nvoid glMultiTexCoord2iARB (GLenum, GLint, GLint);\nvoid glMultiTexCoord2ivARB (GLenum, const GLint *);\nvoid glMultiTexCoord2sARB (GLenum, GLshort, GLshort);\nvoid glMultiTexCoord2svARB (GLenum, const GLshort *);\nvoid glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble);\nvoid glMultiTexCoord3dvARB (GLenum, const GLdouble *);\nvoid glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat);\nvoid glMultiTexCoord3fvARB (GLenum, const GLfloat *);\nvoid glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint);\nvoid glMultiTexCoord3ivARB (GLenum, const GLint *);\nvoid glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort);\nvoid glMultiTexCoord3svARB (GLenum, const GLshort *);\nvoid glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);\nvoid glMultiTexCoord4dvARB (GLenum, const GLdouble *);\nvoid glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);\nvoid glMultiTexCoord4fvARB (GLenum, const GLfloat *);\nvoid glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint);\nvoid glMultiTexCoord4ivARB (GLenum, const GLint *);\nvoid glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort);\nvoid glMultiTexCoord4svARB (GLenum, const GLshort *);\nvoid glLoadTransposeMatrixfARB (const GLfloat *);\nvoid glLoadTransposeMatrixdARB (const GLdouble *);\nvoid glMultTransposeMatrixfARB (const GLfloat *);\nvoid glMultTransposeMatrixdARB (const GLdouble *);\nvoid glSampleCoverageARB (GLclampf, GLboolean);\nvoid glSamplePassARB (GLenum);\nvoid glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);\nvoid glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);\nvoid glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);\nvoid glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);\nvoid glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);\nvoid glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);\nvoid glGetCompressedTexImageARB (GLenum, GLint, GLvoid *);\nvoid glWeightbvARB(GLint, const GLbyte *);\nvoid glWeightsvARB(GLint, const GLshort *);\nvoid glWeightivARB(GLint, const GLint *);\nvoid glWeightfvARB(GLint, const GLfloat *);\nvoid glWeightdvARB(GLint, const GLdouble *);\nvoid glWeightubvARB(GLint, const GLubyte *);\nvoid glWeightusvARB(GLint, const GLushort *);\nvoid glWeightuivARB(GLint, const GLuint *);\nvoid glWeightPointerARB(GLint, GLenum, GLsizei, const GLvoid *);\nvoid glVertexBlendARB(GLint);\nvoid glWindowPos2dARB (GLdouble, GLdouble);\nvoid glWindowPos2dvARB (const GLdouble *);\nvoid glWindowPos2fARB (GLfloat, GLfloat);\nvoid glWindowPos2fvARB (const GLfloat *);\nvoid glWindowPos2iARB (GLint, GLint);\nvoid glWindowPos2ivARB (const GLint *);\nvoid glWindowPos2sARB (GLshort, GLshort);\nvoid glWindowPos2svARB (const GLshort *);\nvoid glWindowPos3dARB (GLdouble, GLdouble, GLdouble);\nvoid glWindowPos3dvARB (const GLdouble *);\nvoid glWindowPos3fARB (GLfloat, GLfloat, GLfloat);\nvoid glWindowPos3fvARB (const GLfloat *);\nvoid glWindowPos3iARB (GLint, GLint, GLint);\nvoid glWindowPos3ivARB (const GLint *);\nvoid glWindowPos3sARB (GLshort, GLshort, GLshort);\nvoid glWindowPos3svARB (const GLshort *);\nvoid glGenQueriesARB(GLsizei n, GLuint *ids);\nvoid glDeleteQueriesARB(GLsizei n, const GLuint *ids);\nGLboolean glIsQueryARB(GLuint id);\nvoid glBeginQueryARB(GLenum target, GLuint id);\nvoid glEndQueryARB(GLenum target);\nvoid glGetQueryivARB(GLenum target, GLenum pname, GLint *params);\nvoid glGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params);\nvoid glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params);\nvoid glPointParameterfARB(GLenum pname, GLfloat param);\nvoid glPointParameterfvARB(GLenum pname, const GLfloat *params);\nvoid glBindProgramARB(GLenum target, GLuint program);\nvoid glDeleteProgramsARB(GLsizei n, const GLuint *programs);\nvoid glGenProgramsARB(GLsizei n, GLuint *programs);\nGLboolean glIsProgramARB(GLuint program);\nvoid glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);\nvoid glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);\nvoid glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);\nvoid glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);\nvoid glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params);\nvoid glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params);\nvoid glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);\nvoid glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);\nvoid glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params);\nvoid glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params);\nvoid glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid *string);\nvoid glGetProgramStringARB(GLenum target, GLenum pname, GLvoid *string);\nvoid glGetProgramivARB(GLenum target, GLenum pname, GLint *params);\nvoid glVertexAttrib1dARB(GLuint index, GLdouble x);\nvoid glVertexAttrib1dvARB(GLuint index, const GLdouble *v);\nvoid glVertexAttrib1fARB(GLuint index, GLfloat x);\nvoid glVertexAttrib1fvARB(GLuint index, const GLfloat *v);\nvoid glVertexAttrib1sARB(GLuint index, GLshort x);\nvoid glVertexAttrib1svARB(GLuint index, const GLshort *v);\nvoid glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);\nvoid glVertexAttrib2dvARB(GLuint index, const GLdouble *v);\nvoid glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);\nvoid glVertexAttrib2fvARB(GLuint index, const GLfloat *v);\nvoid glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);\nvoid glVertexAttrib2svARB(GLuint index, const GLshort *v);\nvoid glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);\nvoid glVertexAttrib3dvARB(GLuint index, const GLdouble *v);\nvoid glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);\nvoid glVertexAttrib3fvARB(GLuint index, const GLfloat *v);\nvoid glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);\nvoid glVertexAttrib3svARB(GLuint index, const GLshort *v);\nvoid glVertexAttrib4NbvARB(GLuint index, const GLbyte *v);\nvoid glVertexAttrib4NivARB(GLuint index, const GLint *v);\nvoid glVertexAttrib4NsvARB(GLuint index, const GLshort *v);\nvoid glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);\nvoid glVertexAttrib4NubvARB(GLuint index, const GLubyte *v);\nvoid glVertexAttrib4NuivARB(GLuint index, const GLuint *v);\nvoid glVertexAttrib4NusvARB(GLuint index, const GLushort *v);\nvoid glVertexAttrib4bvARB(GLuint index, const GLbyte *v);\nvoid glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glVertexAttrib4dvARB(GLuint index, const GLdouble *v);\nvoid glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glVertexAttrib4fvARB(GLuint index, const GLfloat *v);\nvoid glVertexAttrib4ivARB(GLuint index, const GLint *v);\nvoid glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);\nvoid glVertexAttrib4svARB(GLuint index, const GLshort *v);\nvoid glVertexAttrib4ubvARB(GLuint index, const GLubyte *v);\nvoid glVertexAttrib4uivARB(GLuint index, const GLuint *v);\nvoid glVertexAttrib4usvARB(GLuint index, const GLushort *v);\nvoid glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);\nvoid glDisableVertexAttribArrayARB(GLuint index);\nvoid glEnableVertexAttribArrayARB(GLuint index);\nvoid glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid **pointer);\nvoid glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params);\nvoid glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params);\nvoid glGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params);\nvoid glDeleteObjectARB(GLhandleARB obj);\nGLhandleARB glGetHandleARB(GLenum pname);\nvoid glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);\nGLhandleARB glCreateShaderObjectARB(GLenum shaderType);\nvoid glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);\nvoid glCompileShaderARB(GLhandleARB shaderObj);\nGLhandleARB glCreateProgramObjectARB(void);\nvoid glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);\nvoid glLinkProgramARB(GLhandleARB programObj);\nvoid glUseProgramObjectARB(GLhandleARB programObj);\nvoid glValidateProgramARB(GLhandleARB programObj);\nvoid glUniform1fARB(GLint location, GLfloat v0);\nvoid glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);\nvoid glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\nvoid glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\nvoid glUniform1iARB(GLint location, GLint v0);\nvoid glUniform2iARB(GLint location, GLint v0, GLint v1);\nvoid glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);\nvoid glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\nvoid glUniform1fvARB(GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform2fvARB(GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform3fvARB(GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform4fvARB(GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform1ivARB(GLint location, GLsizei count, const GLint *value);\nvoid glUniform2ivARB(GLint location, GLsizei count, const GLint *value);\nvoid glUniform3ivARB(GLint location, GLsizei count, const GLint *value);\nvoid glUniform4ivARB(GLint location, GLsizei count, const GLint *value);\nvoid glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params);\nvoid glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params);\nvoid glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);\nvoid glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);\nGLint glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name);\nvoid glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);\nvoid glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params);\nvoid glGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params);\nvoid glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);\nvoid glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name);\nvoid glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);\nGLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name);\nvoid glBindBufferARB(GLenum target, GLuint buffer);\nvoid glDeleteBuffersARB(GLsizei n, const GLuint *buffers);\nvoid glGenBuffersARB(GLsizei n, GLuint *buffers);\nGLboolean glIsBufferARB(GLuint buffer);\nvoid glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);\nvoid glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);\nvoid glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);\nGLvoid *glMapBufferARB(GLenum target, GLenum access);\nGLboolean glUnmapBufferARB(GLenum target);\nvoid glGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params);\nvoid glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid **params);\nvoid glDrawBuffersARB(GLsizei n, const GLenum *bufs);\nvoid glClampColorARB(GLenum target, GLenum clamp);\nvoid glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);\nvoid glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);\nvoid glVertexAttribDivisorARB(GLuint index, GLuint divisor);\nvoid glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);\nvoid glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);\nvoid glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);\nGLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName);\nvoid glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);\nvoid glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);\nvoid glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\nvoid glBindBufferBase(GLenum target, GLuint index, GLuint buffer);\nvoid glGetIntegeri_v(GLenum pname, GLuint index, GLint* data);\nvoid glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\nvoid glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);\nvoid glBlendEquationEXT (GLenum);\nvoid glLockArraysEXT (GLint, GLsizei);\nvoid glUnlockArraysEXT (void);\nvoid glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *);\nvoid glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte);\nvoid glSecondaryColor3bvEXT (const GLbyte *);\nvoid glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble);\nvoid glSecondaryColor3dvEXT (const GLdouble *);\nvoid glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat);\nvoid glSecondaryColor3fvEXT (const GLfloat *);\nvoid glSecondaryColor3iEXT (GLint, GLint, GLint);\nvoid glSecondaryColor3ivEXT (const GLint *);\nvoid glSecondaryColor3sEXT (GLshort, GLshort, GLshort);\nvoid glSecondaryColor3svEXT (const GLshort *);\nvoid glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte);\nvoid glSecondaryColor3ubvEXT (const GLubyte *);\nvoid glSecondaryColor3uiEXT (GLuint, GLuint, GLuint);\nvoid glSecondaryColor3uivEXT (const GLuint *);\nvoid glSecondaryColor3usEXT (GLushort, GLushort, GLushort);\nvoid glSecondaryColor3usvEXT (const GLushort *);\nvoid glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, const GLvoid *);\nvoid glMultiDrawArraysEXT (GLenum, const GLint *, const GLsizei *, GLsizei);\nvoid glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);\nvoid glFogCoordfEXT (GLfloat);\nvoid glFogCoordfvEXT (const GLfloat *);\nvoid glFogCoorddEXT (GLdouble);\nvoid glFogCoorddvEXT (const GLdouble *);\nvoid glFogCoordPointerEXT (GLenum, GLsizei, const GLvoid *);\nvoid glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum);\nvoid glActiveStencilFaceEXT(GLenum face);\nvoid glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);\nvoid glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);\nGLboolean glIsRenderbufferEXT(GLuint renderbuffer);\nvoid glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);\nvoid glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);\nvoid glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);\nvoid glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\nvoid glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params);\nGLboolean glIsFramebufferEXT(GLuint framebuffer);\nvoid glBindFramebufferEXT(GLenum target, GLuint framebuffer);\nvoid glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);\nvoid glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers);\nGLenum glCheckFramebufferStatusEXT(GLenum target);\nvoid glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\nvoid glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\nvoid glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);\nvoid glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\nvoid glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params);\nvoid glGenerateMipmapEXT(GLenum target);\nvoid glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\nvoid glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\nvoid glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);\nvoid glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);\nvoid glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);\nvoid glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);\nGLboolean glIsRenderbuffer (GLuint);\nvoid glBindRenderbuffer (GLenum, GLuint);\nvoid glDeleteRenderbuffers (GLsizei, const GLuint *);\nvoid glGenRenderbuffers (GLsizei, GLuint *);\nvoid glRenderbufferStorage (GLenum, GLenum, GLsizei, GLsizei);\nvoid glGetRenderbufferParameteriv (GLenum, GLenum, GLint *);\nGLboolean glIsFramebuffer (GLuint);\nvoid glBindFramebuffer (GLenum, GLuint);\nvoid glDeleteFramebuffers (GLsizei, const GLuint *);\nvoid glGenFramebuffers (GLsizei, GLuint *);\nGLenum glCheckFramebufferStatus (GLenum);\nvoid glFramebufferTexture1D (GLenum, GLenum, GLenum, GLuint, GLint);\nvoid glFramebufferTexture2D (GLenum, GLenum, GLenum, GLuint, GLint);\nvoid glFramebufferTexture3D (GLenum, GLenum, GLenum, GLuint, GLint, GLint);\nvoid glFramebufferRenderbuffer (GLenum, GLenum, GLenum, GLuint);\nvoid glGetFramebufferAttachmentParameteriv (GLenum, GLenum, GLenum, GLint *);\nvoid glGenerateMipmap (GLenum);\nvoid glBlitFramebuffer (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);\nvoid glRenderbufferStorageMultisample (GLenum, GLsizei, GLenum, GLsizei, GLsizei);\nvoid glFramebufferTextureLayer (GLenum, GLenum, GLuint, GLint, GLint);\nvoid glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\nvoid glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);\nvoid glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);\nvoid glBeginTransformFeedbackEXT(GLenum primitiveMode);\nvoid glEndTransformFeedbackEXT(void);\nvoid glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode);\nvoid glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);\nvoid glGetIntegerIndexedvEXT(GLenum param, GLuint index, GLint *values);\nvoid glGetBooleanIndexedvEXT(GLenum param, GLuint index, GLboolean *values);\nvoid glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);\nGLint glGetUniformBufferSizeEXT(GLuint program, GLint location);\nGLintptr glGetUniformOffsetEXT(GLuint program, GLint location);\nvoid glClearColorIiEXT( GLint r, GLint g, GLint b, GLint a );\nvoid glClearColorIuiEXT( GLuint r, GLuint g, GLuint b, GLuint a );\nvoid glTexParameterIivEXT( GLenum target, GLenum pname, GLint *params );\nvoid glTexParameterIuivEXT( GLenum target, GLenum pname, GLuint *params );\nvoid glGetTexParameterIivEXT( GLenum target, GLenum pname, GLint *params);\nvoid glGetTexParameterIuivEXT( GLenum target, GLenum pname, GLuint *params);\nvoid glVertexAttribI1iEXT(GLuint index, GLint x);\nvoid glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);\nvoid glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);\nvoid glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);\nvoid glVertexAttribI1uiEXT(GLuint index, GLuint x);\nvoid glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);\nvoid glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);\nvoid glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);\nvoid glVertexAttribI1ivEXT(GLuint index, const GLint *v);\nvoid glVertexAttribI2ivEXT(GLuint index, const GLint *v);\nvoid glVertexAttribI3ivEXT(GLuint index, const GLint *v);\nvoid glVertexAttribI4ivEXT(GLuint index, const GLint *v);\nvoid glVertexAttribI1uivEXT(GLuint index, const GLuint *v);\nvoid glVertexAttribI2uivEXT(GLuint index, const GLuint *v);\nvoid glVertexAttribI3uivEXT(GLuint index, const GLuint *v);\nvoid glVertexAttribI4uivEXT(GLuint index, const GLuint *v);\nvoid glVertexAttribI4bvEXT(GLuint index, const GLbyte *v);\nvoid glVertexAttribI4svEXT(GLuint index, const GLshort *v);\nvoid glVertexAttribI4ubvEXT(GLuint index, const GLubyte *v);\nvoid glVertexAttribI4usvEXT(GLuint index, const GLushort *v);\nvoid glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params);\nvoid glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params);\nvoid glUniform1uiEXT(GLint location, GLuint v0);\nvoid glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);\nvoid glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);\nvoid glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\nvoid glUniform1uivEXT(GLint location, GLsizei count, const GLuint *value);\nvoid glUniform2uivEXT(GLint location, GLsizei count, const GLuint *value);\nvoid glUniform3uivEXT(GLint location, GLsizei count, const GLuint *value);\nvoid glUniform4uivEXT(GLint location, GLsizei count, const GLuint *value);\nvoid glGetUniformuivEXT(GLuint program, GLint location, GLuint *params);\nvoid glBindFragDataLocationEXT(GLuint program, GLuint colorNumber, const GLchar *name);\nGLint glGetFragDataLocationEXT(GLuint program, const GLchar *name);\nvoid glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);\nvoid glEnableIndexedEXT(GLenum target, GLuint index);\nvoid glDisableIndexedEXT(GLenum target, GLuint index);\nGLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index);\nvoid glProvokingVertexEXT(GLenum mode);\nvoid glTextureRangeAPPLE(GLenum target, GLsizei length, const GLvoid *pointer);\nvoid glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, GLvoid **params);\nvoid glVertexArrayRangeAPPLE(GLsizei length, const GLvoid *pointer);\nvoid glFlushVertexArrayRangeAPPLE(GLsizei length, const GLvoid *pointer);\nvoid glVertexArrayParameteriAPPLE(GLenum pname, GLint param);\nvoid glBindVertexArrayAPPLE(GLuint id);\nvoid glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *ids);\nvoid glGenVertexArraysAPPLE(GLsizei n, GLuint *ids);\nGLboolean glIsVertexArrayAPPLE(GLuint id);\nvoid glGenFencesAPPLE(GLsizei n, GLuint *fences);\nvoid glDeleteFencesAPPLE(GLsizei n, const GLuint *fences);\nvoid glSetFenceAPPLE(GLuint fence);\nGLboolean glIsFenceAPPLE(GLuint fence);\nGLboolean glTestFenceAPPLE(GLuint fence);\nvoid glFinishFenceAPPLE(GLuint fence);\nGLboolean glTestObjectAPPLE(GLenum object, GLuint name);\nvoid glFinishObjectAPPLE(GLenum object, GLuint name);\nvoid glElementPointerAPPLE(GLenum type, const GLvoid *pointer);\nvoid glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);\nvoid glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);\nvoid glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);\nvoid glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);\nvoid glFlushRenderAPPLE(void);\nvoid glFinishRenderAPPLE(void);\nvoid glSwapAPPLE(void);\nvoid glEnableVertexAttribAPPLE(GLuint index, GLenum pname);\nvoid glDisableVertexAttribAPPLE(GLuint index, GLenum pname);\nGLboolean glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);\nvoid glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);\nvoid glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);\nvoid glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);\nvoid glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);\nvoid glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);\nvoid glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);\nGLenum glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);\nGLenum glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);\nvoid glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint* params);\nvoid glPNTrianglesiATI(GLenum pname, GLint param);\nvoid glPNTrianglesfATI(GLenum pname, GLfloat param);\nvoid glBlendEquationSeparateATI(GLenum equationRGB, GLenum equationAlpha);\nvoid glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);\nvoid glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);\nvoid glPNTrianglesiATIX(GLenum pname, GLint param);\nvoid glPNTrianglesfATIX(GLenum pname, GLfloat param);\nvoid glPointParameteriNV(GLenum pname, GLint param);\nvoid glPointParameterivNV(GLenum pname, const GLint *params);\nvoid glBeginConditionalRenderNV (GLuint id, GLenum mode);\nvoid glEndConditionalRenderNV (void);\nvoid glAccum (GLenum op, GLfloat value);\nvoid glAlphaFunc (GLenum func, GLclampf ref);\nGLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);\nvoid glArrayElement (GLint i);\nvoid glBegin (GLenum mode);\nvoid glBindTexture (GLenum target, GLuint texture);\nvoid glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);\nvoid glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\nvoid glBlendEquation (GLenum mode);\nvoid glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);\nvoid glBlendFunc (GLenum sfactor, GLenum dfactor);\nvoid glCallList (GLuint list);\nvoid glCallLists (GLsizei n, GLenum type, const GLvoid *lists);\nvoid glClear (GLbitfield mask);\nvoid glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\nvoid glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);\nvoid glClearDepth (GLclampd depth);\nvoid glClearIndex (GLfloat c);\nvoid glClearStencil (GLint s);\nvoid glClipPlane (GLenum plane, const GLdouble *equation);\nvoid glColor3b (GLbyte red, GLbyte green, GLbyte blue);\nvoid glColor3bv (const GLbyte *v);\nvoid glColor3d (GLdouble red, GLdouble green, GLdouble blue);\nvoid glColor3dv (const GLdouble *v);\nvoid glColor3f (GLfloat red, GLfloat green, GLfloat blue);\nvoid glColor3fv (const GLfloat *v);\nvoid glColor3i (GLint red, GLint green, GLint blue);\nvoid glColor3iv (const GLint *v);\nvoid glColor3s (GLshort red, GLshort green, GLshort blue);\nvoid glColor3sv (const GLshort *v);\nvoid glColor3ub (GLubyte red, GLubyte green, GLubyte blue);\nvoid glColor3ubv (const GLubyte *v);\nvoid glColor3ui (GLuint red, GLuint green, GLuint blue);\nvoid glColor3uiv (const GLuint *v);\nvoid glColor3us (GLushort red, GLushort green, GLushort blue);\nvoid glColor3usv (const GLushort *v);\nvoid glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);\nvoid glColor4bv (const GLbyte *v);\nvoid glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);\nvoid glColor4dv (const GLdouble *v);\nvoid glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\nvoid glColor4fv (const GLfloat *v);\nvoid glColor4i (GLint red, GLint green, GLint blue, GLint alpha);\nvoid glColor4iv (const GLint *v);\nvoid glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);\nvoid glColor4sv (const GLshort *v);\nvoid glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);\nvoid glColor4ubv (const GLubyte *v);\nvoid glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);\nvoid glColor4uiv (const GLuint *v);\nvoid glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);\nvoid glColor4usv (const GLushort *v);\nvoid glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\nvoid glColorMaterial (GLenum face, GLenum mode);\nvoid glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);\nvoid glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);\nvoid glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);\nvoid glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);\nvoid glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);\nvoid glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);\nvoid glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);\nvoid glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);\nvoid glConvolutionParameteri (GLenum target, GLenum pname, GLint params);\nvoid glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);\nvoid glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);\nvoid glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);\nvoid glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);\nvoid glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);\nvoid glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);\nvoid glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);\nvoid glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);\nvoid glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);\nvoid glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\nvoid glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\nvoid glCullFace (GLenum mode);\nvoid glDeleteLists (GLuint list, GLsizei range);\nvoid glDeleteTextures (GLsizei n, const GLuint *textures);\nvoid glDepthFunc (GLenum func);\nvoid glDepthMask (GLboolean flag);\nvoid glDepthRange (GLclampd zNear, GLclampd zFar);\nvoid glDisable (GLenum cap);\nvoid glDisableClientState (GLenum array);\nvoid glDrawArrays (GLenum mode, GLint first, GLsizei count);\nvoid glDrawBuffer (GLenum mode);\nvoid glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);\nvoid glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);\nvoid glEdgeFlag (GLboolean flag);\nvoid glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);\nvoid glEdgeFlagv (const GLboolean *flag);\nvoid glEnable (GLenum cap);\nvoid glEnableClientState (GLenum array);\nvoid glEnd (void);\nvoid glEndList (void);\nvoid glEvalCoord1d (GLdouble u);\nvoid glEvalCoord1dv (const GLdouble *u);\nvoid glEvalCoord1f (GLfloat u);\nvoid glEvalCoord1fv (const GLfloat *u);\nvoid glEvalCoord2d (GLdouble u, GLdouble v);\nvoid glEvalCoord2dv (const GLdouble *u);\nvoid glEvalCoord2f (GLfloat u, GLfloat v);\nvoid glEvalCoord2fv (const GLfloat *u);\nvoid glEvalMesh1 (GLenum mode, GLint i1, GLint i2);\nvoid glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);\nvoid glEvalPoint1 (GLint i);\nvoid glEvalPoint2 (GLint i, GLint j);\nvoid glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);\nvoid glFinish (void);\nvoid glFlush (void);\nvoid glFogf (GLenum pname, GLfloat param);\nvoid glFogfv (GLenum pname, const GLfloat *params);\nvoid glFogi (GLenum pname, GLint param);\nvoid glFogiv (GLenum pname, const GLint *params);\nvoid glFrontFace (GLenum mode);\nvoid glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);\nGLuint glGenLists (GLsizei range);\nvoid glGenTextures (GLsizei n, GLuint *textures);\nvoid glGetBooleanv (GLenum pname, GLboolean *params);\nvoid glGetClipPlane (GLenum plane, GLdouble *equation);\nvoid glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);\nvoid glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);\nvoid glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glGetDoublev (GLenum pname, GLdouble *params);\nGLenum glGetError (void);\nvoid glGetFloatv (GLenum pname, GLfloat *params);\nvoid glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);\nvoid glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glGetIntegerv (GLenum pname, GLint *params);\nvoid glGetLightfv (GLenum light, GLenum pname, GLfloat *params);\nvoid glGetLightiv (GLenum light, GLenum pname, GLint *params);\nvoid glGetMapdv (GLenum target, GLenum query, GLdouble *v);\nvoid glGetMapfv (GLenum target, GLenum query, GLfloat *v);\nvoid glGetMapiv (GLenum target, GLenum query, GLint *v);\nvoid glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);\nvoid glGetMaterialiv (GLenum face, GLenum pname, GLint *params);\nvoid glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);\nvoid glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glGetPixelMapfv (GLenum map, GLfloat *values);\nvoid glGetPixelMapuiv (GLenum map, GLuint *values);\nvoid glGetPixelMapusv (GLenum map, GLushort *values);\nvoid glGetPointerv (GLenum pname, GLvoid* *params);\nvoid glGetPolygonStipple (GLubyte *mask);\nvoid glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);\nconst GLubyte * glGetString (GLenum name);\nvoid glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetTexEnviv (GLenum target, GLenum pname, GLint *params);\nvoid glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);\nvoid glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);\nvoid glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);\nvoid glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);\nvoid glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);\nvoid glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);\nvoid glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);\nvoid glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glHint (GLenum target, GLenum mode);\nvoid glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);\nvoid glIndexMask (GLuint mask);\nvoid glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glIndexd (GLdouble c);\nvoid glIndexdv (const GLdouble *c);\nvoid glIndexf (GLfloat c);\nvoid glIndexfv (const GLfloat *c);\nvoid glIndexi (GLint c);\nvoid glIndexiv (const GLint *c);\nvoid glIndexs (GLshort c);\nvoid glIndexsv (const GLshort *c);\nvoid glIndexub (GLubyte c);\nvoid glIndexubv (const GLubyte *c);\nvoid glInitNames (void);\nvoid glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);\nGLboolean glIsEnabled (GLenum cap);\nGLboolean glIsList (GLuint list);\nGLboolean glIsTexture (GLuint texture);\nvoid glLightModelf (GLenum pname, GLfloat param);\nvoid glLightModelfv (GLenum pname, const GLfloat *params);\nvoid glLightModeli (GLenum pname, GLint param);\nvoid glLightModeliv (GLenum pname, const GLint *params);\nvoid glLightf (GLenum light, GLenum pname, GLfloat param);\nvoid glLightfv (GLenum light, GLenum pname, const GLfloat *params);\nvoid glLighti (GLenum light, GLenum pname, GLint param);\nvoid glLightiv (GLenum light, GLenum pname, const GLint *params);\nvoid glLineStipple (GLint factor, GLushort pattern);\nvoid glLineWidth (GLfloat width);\nvoid glListBase (GLuint base);\nvoid glLoadIdentity (void);\nvoid glLoadMatrixd (const GLdouble *m);\nvoid glLoadMatrixf (const GLfloat *m);\nvoid glLoadName (GLuint name);\nvoid glLogicOp (GLenum opcode);\nvoid glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);\nvoid glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);\nvoid glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);\nvoid glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);\nvoid glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);\nvoid glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);\nvoid glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);\nvoid glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);\nvoid glMaterialf (GLenum face, GLenum pname, GLfloat param);\nvoid glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);\nvoid glMateriali (GLenum face, GLenum pname, GLint param);\nvoid glMaterialiv (GLenum face, GLenum pname, const GLint *params);\nvoid glMatrixMode (GLenum mode);\nvoid glMinmax (GLenum target, GLenum internalformat, GLboolean sink);\nvoid glMultMatrixd (const GLdouble *m);\nvoid glMultMatrixf (const GLfloat *m);\nvoid glNewList (GLuint list, GLenum mode);\nvoid glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);\nvoid glNormal3bv (const GLbyte *v);\nvoid glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);\nvoid glNormal3dv (const GLdouble *v);\nvoid glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);\nvoid glNormal3fv (const GLfloat *v);\nvoid glNormal3i (GLint nx, GLint ny, GLint nz);\nvoid glNormal3iv (const GLint *v);\nvoid glNormal3s (GLshort nx, GLshort ny, GLshort nz);\nvoid glNormal3sv (const GLshort *v);\nvoid glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);\nvoid glPassThrough (GLfloat token);\nvoid glPixelMapfv (GLenum map, GLint mapsize, const GLfloat *values);\nvoid glPixelMapuiv (GLenum map, GLint mapsize, const GLuint *values);\nvoid glPixelMapusv (GLenum map, GLint mapsize, const GLushort *values);\nvoid glPixelStoref (GLenum pname, GLfloat param);\nvoid glPixelStorei (GLenum pname, GLint param);\nvoid glPixelTransferf (GLenum pname, GLfloat param);\nvoid glPixelTransferi (GLenum pname, GLint param);\nvoid glPixelZoom (GLfloat xfactor, GLfloat yfactor);\nvoid glPointSize (GLfloat size);\nvoid glPolygonMode (GLenum face, GLenum mode);\nvoid glPolygonOffset (GLfloat factor, GLfloat units);\nvoid glPolygonStipple (const GLubyte *mask);\nvoid glPopAttrib (void);\nvoid glPopClientAttrib (void);\nvoid glPopMatrix (void);\nvoid glPopName (void);\nvoid glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);\nvoid glPushAttrib (GLbitfield mask);\nvoid glPushClientAttrib (GLbitfield mask);\nvoid glPushMatrix (void);\nvoid glPushName (GLuint name);\nvoid glRasterPos2d (GLdouble x, GLdouble y);\nvoid glRasterPos2dv (const GLdouble *v);\nvoid glRasterPos2f (GLfloat x, GLfloat y);\nvoid glRasterPos2fv (const GLfloat *v);\nvoid glRasterPos2i (GLint x, GLint y);\nvoid glRasterPos2iv (const GLint *v);\nvoid glRasterPos2s (GLshort x, GLshort y);\nvoid glRasterPos2sv (const GLshort *v);\nvoid glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);\nvoid glRasterPos3dv (const GLdouble *v);\nvoid glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);\nvoid glRasterPos3fv (const GLfloat *v);\nvoid glRasterPos3i (GLint x, GLint y, GLint z);\nvoid glRasterPos3iv (const GLint *v);\nvoid glRasterPos3s (GLshort x, GLshort y, GLshort z);\nvoid glRasterPos3sv (const GLshort *v);\nvoid glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glRasterPos4dv (const GLdouble *v);\nvoid glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glRasterPos4fv (const GLfloat *v);\nvoid glRasterPos4i (GLint x, GLint y, GLint z, GLint w);\nvoid glRasterPos4iv (const GLint *v);\nvoid glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);\nvoid glRasterPos4sv (const GLshort *v);\nvoid glReadBuffer (GLenum mode);\nvoid glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);\nvoid glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);\nvoid glRectdv (const GLdouble *v1, const GLdouble *v2);\nvoid glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);\nvoid glRectfv (const GLfloat *v1, const GLfloat *v2);\nvoid glRecti (GLint x1, GLint y1, GLint x2, GLint y2);\nvoid glRectiv (const GLint *v1, const GLint *v2);\nvoid glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);\nvoid glRectsv (const GLshort *v1, const GLshort *v2);\nGLint glRenderMode (GLenum mode);\nvoid glResetHistogram (GLenum target);\nvoid glResetMinmax (GLenum target);\nvoid glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);\nvoid glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);\nvoid glScaled (GLdouble x, GLdouble y, GLdouble z);\nvoid glScalef (GLfloat x, GLfloat y, GLfloat z);\nvoid glScissor (GLint x, GLint y, GLsizei width, GLsizei height);\nvoid glSelectBuffer (GLsizei size, GLuint *buffer);\nvoid glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);\nvoid glShadeModel (GLenum mode);\nvoid glStencilFunc (GLenum func, GLint ref, GLuint mask);\nvoid glStencilMask (GLuint mask);\nvoid glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);\nvoid glTexCoord1d (GLdouble s);\nvoid glTexCoord1dv (const GLdouble *v);\nvoid glTexCoord1f (GLfloat s);\nvoid glTexCoord1fv (const GLfloat *v);\nvoid glTexCoord1i (GLint s);\nvoid glTexCoord1iv (const GLint *v);\nvoid glTexCoord1s (GLshort s);\nvoid glTexCoord1sv (const GLshort *v);\nvoid glTexCoord2d (GLdouble s, GLdouble t);\nvoid glTexCoord2dv (const GLdouble *v);\nvoid glTexCoord2f (GLfloat s, GLfloat t);\nvoid glTexCoord2fv (const GLfloat *v);\nvoid glTexCoord2i (GLint s, GLint t);\nvoid glTexCoord2iv (const GLint *v);\nvoid glTexCoord2s (GLshort s, GLshort t);\nvoid glTexCoord2sv (const GLshort *v);\nvoid glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);\nvoid glTexCoord3dv (const GLdouble *v);\nvoid glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);\nvoid glTexCoord3fv (const GLfloat *v);\nvoid glTexCoord3i (GLint s, GLint t, GLint r);\nvoid glTexCoord3iv (const GLint *v);\nvoid glTexCoord3s (GLshort s, GLshort t, GLshort r);\nvoid glTexCoord3sv (const GLshort *v);\nvoid glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);\nvoid glTexCoord4dv (const GLdouble *v);\nvoid glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);\nvoid glTexCoord4fv (const GLfloat *v);\nvoid glTexCoord4i (GLint s, GLint t, GLint r, GLint q);\nvoid glTexCoord4iv (const GLint *v);\nvoid glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);\nvoid glTexCoord4sv (const GLshort *v);\nvoid glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glTexEnvf (GLenum target, GLenum pname, GLfloat param);\nvoid glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);\nvoid glTexEnvi (GLenum target, GLenum pname, GLint param);\nvoid glTexEnviv (GLenum target, GLenum pname, const GLint *params);\nvoid glTexGend (GLenum coord, GLenum pname, GLdouble param);\nvoid glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);\nvoid glTexGenf (GLenum coord, GLenum pname, GLfloat param);\nvoid glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);\nvoid glTexGeni (GLenum coord, GLenum pname, GLint param);\nvoid glTexGeniv (GLenum coord, GLenum pname, const GLint *params);\nvoid glTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTexParameterf (GLenum target, GLenum pname, GLfloat param);\nvoid glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);\nvoid glTexParameteri (GLenum target, GLenum pname, GLint param);\nvoid glTexParameteriv (GLenum target, GLenum pname, const GLint *params);\nvoid glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);\nvoid glTranslated (GLdouble x, GLdouble y, GLdouble z);\nvoid glTranslatef (GLfloat x, GLfloat y, GLfloat z);\nvoid glVertex2d (GLdouble x, GLdouble y);\nvoid glVertex2dv (const GLdouble *v);\nvoid glVertex2f (GLfloat x, GLfloat y);\nvoid glVertex2fv (const GLfloat *v);\nvoid glVertex2i (GLint x, GLint y);\nvoid glVertex2iv (const GLint *v);\nvoid glVertex2s (GLshort x, GLshort y);\nvoid glVertex2sv (const GLshort *v);\nvoid glVertex3d (GLdouble x, GLdouble y, GLdouble z);\nvoid glVertex3dv (const GLdouble *v);\nvoid glVertex3f (GLfloat x, GLfloat y, GLfloat z);\nvoid glVertex3fv (const GLfloat *v);\nvoid glVertex3i (GLint x, GLint y, GLint z);\nvoid glVertex3iv (const GLint *v);\nvoid glVertex3s (GLshort x, GLshort y, GLshort z);\nvoid glVertex3sv (const GLshort *v);\nvoid glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glVertex4dv (const GLdouble *v);\nvoid glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glVertex4fv (const GLfloat *v);\nvoid glVertex4i (GLint x, GLint y, GLint z, GLint w);\nvoid glVertex4iv (const GLint *v);\nvoid glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);\nvoid glVertex4sv (const GLshort *v);\nvoid glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glViewport (GLint x, GLint y, GLsizei width, GLsizei height);\nvoid glSampleCoverage (GLclampf value, GLboolean invert);\nvoid glSamplePass (GLenum pass);\nvoid glLoadTransposeMatrixf (const GLfloat *m);\nvoid glLoadTransposeMatrixd (const GLdouble *m);\nvoid glMultTransposeMatrixf (const GLfloat *m);\nvoid glMultTransposeMatrixd (const GLdouble *m);\nvoid glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);\nvoid glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);\nvoid glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);\nvoid glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);\nvoid glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);\nvoid glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);\nvoid glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img);\nvoid glActiveTexture (GLenum texture);\nvoid glClientActiveTexture (GLenum texture);\nvoid glMultiTexCoord1d (GLenum target, GLdouble s);\nvoid glMultiTexCoord1dv (GLenum target, const GLdouble *v);\nvoid glMultiTexCoord1f (GLenum target, GLfloat s);\nvoid glMultiTexCoord1fv (GLenum target, const GLfloat *v);\nvoid glMultiTexCoord1i (GLenum target, GLint s);\nvoid glMultiTexCoord1iv (GLenum target, const GLint *v);\nvoid glMultiTexCoord1s (GLenum target, GLshort s);\nvoid glMultiTexCoord1sv (GLenum target, const GLshort *v);\nvoid glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);\nvoid glMultiTexCoord2dv (GLenum target, const GLdouble *v);\nvoid glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);\nvoid glMultiTexCoord2fv (GLenum target, const GLfloat *v);\nvoid glMultiTexCoord2i (GLenum target, GLint s, GLint t);\nvoid glMultiTexCoord2iv (GLenum target, const GLint *v);\nvoid glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);\nvoid glMultiTexCoord2sv (GLenum target, const GLshort *v);\nvoid glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);\nvoid glMultiTexCoord3dv (GLenum target, const GLdouble *v);\nvoid glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);\nvoid glMultiTexCoord3fv (GLenum target, const GLfloat *v);\nvoid glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);\nvoid glMultiTexCoord3iv (GLenum target, const GLint *v);\nvoid glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);\nvoid glMultiTexCoord3sv (GLenum target, const GLshort *v);\nvoid glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);\nvoid glMultiTexCoord4dv (GLenum target, const GLdouble *v);\nvoid glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);\nvoid glMultiTexCoord4fv (GLenum target, const GLfloat *v);\nvoid glMultiTexCoord4i (GLenum target, GLint, GLint s, GLint t, GLint r);\nvoid glMultiTexCoord4iv (GLenum target, const GLint *v);\nvoid glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);\nvoid glMultiTexCoord4sv (GLenum target, const GLshort *v);\nvoid glFogCoordf (GLfloat coord);\nvoid glFogCoordfv (const GLfloat *coord);\nvoid glFogCoordd (GLdouble coord);\nvoid glFogCoorddv (const GLdouble * coord);\nvoid glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);\nvoid glSecondaryColor3bv (const GLbyte *v);\nvoid glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);\nvoid glSecondaryColor3dv (const GLdouble *v);\nvoid glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);\nvoid glSecondaryColor3fv (const GLfloat *v);\nvoid glSecondaryColor3i (GLint red, GLint green, GLint blue);\nvoid glSecondaryColor3iv (const GLint *v);\nvoid glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);\nvoid glSecondaryColor3sv (const GLshort *v);\nvoid glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);\nvoid glSecondaryColor3ubv (const GLubyte *v);\nvoid glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);\nvoid glSecondaryColor3uiv (const GLuint *v);\nvoid glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);\nvoid glSecondaryColor3usv (const GLushort *v);\nvoid glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);\nvoid glPointParameterf (GLenum pname, GLfloat param);\nvoid glPointParameterfv (GLenum pname, const GLfloat *params);\nvoid glPointParameteri (GLenum pname, GLint param);\nvoid glPointParameteriv (GLenum pname, const GLint *params);\nvoid glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\nvoid glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);\nvoid glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);\nvoid glWindowPos2d (GLdouble x, GLdouble y);\nvoid glWindowPos2dv (const GLdouble *v);\nvoid glWindowPos2f (GLfloat x, GLfloat y);\nvoid glWindowPos2fv (const GLfloat *v);\nvoid glWindowPos2i (GLint x, GLint y);\nvoid glWindowPos2iv (const GLint *v);\nvoid glWindowPos2s (GLshort x, GLshort y);\nvoid glWindowPos2sv (const GLshort *v);\nvoid glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);\nvoid glWindowPos3dv (const GLdouble *v);\nvoid glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);\nvoid glWindowPos3fv (const GLfloat *v);\nvoid glWindowPos3i (GLint x, GLint y, GLint z);\nvoid glWindowPos3iv (const GLint *v);\nvoid glWindowPos3s (GLshort x, GLshort y, GLshort z);\nvoid glWindowPos3sv (const GLshort *v);\nvoid glGenQueries(GLsizei n, GLuint *ids);\nvoid glDeleteQueries(GLsizei n, const GLuint *ids);\nGLboolean glIsQuery(GLuint id);\nvoid glBeginQuery(GLenum target, GLuint id);\nvoid glEndQuery(GLenum target);\nvoid glGetQueryiv(GLenum target, GLenum pname, GLint *params);\nvoid glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params);\nvoid glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);\nvoid glBindBuffer (GLenum target, GLuint buffer);\nvoid glDeleteBuffers (GLsizei n, const GLuint *buffers);\nvoid glGenBuffers (GLsizei n, GLuint *buffers);\nGLboolean glIsBuffer (GLuint buffer);\nvoid glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);\nvoid glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);\nvoid glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);\nGLvoid * glMapBuffer (GLenum target, GLenum access);\nGLboolean glUnmapBuffer (GLenum target);\nvoid glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);\nvoid glGetBufferPointerv (GLenum target, GLenum pname, GLvoid **params);\nvoid glDrawBuffers (GLsizei n, const GLenum *bufs);\nvoid glVertexAttrib1d (GLuint index, GLdouble x);\nvoid glVertexAttrib1dv (GLuint index, const GLdouble *v);\nvoid glVertexAttrib1f (GLuint index, GLfloat x);\nvoid glVertexAttrib1fv (GLuint index, const GLfloat *v);\nvoid glVertexAttrib1s (GLuint index, GLshort x);\nvoid glVertexAttrib1sv (GLuint index, const GLshort *v);\nvoid glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);\nvoid glVertexAttrib2dv (GLuint index, const GLdouble *v);\nvoid glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);\nvoid glVertexAttrib2fv (GLuint index, const GLfloat *v);\nvoid glVertexAttrib2s (GLuint index, GLshort x, GLshort y);\nvoid glVertexAttrib2sv (GLuint index, const GLshort *v);\nvoid glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);\nvoid glVertexAttrib3dv (GLuint index, const GLdouble *v);\nvoid glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);\nvoid glVertexAttrib3fv (GLuint index, const GLfloat *v);\nvoid glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);\nvoid glVertexAttrib3sv (GLuint index, const GLshort *v);\nvoid glVertexAttrib4Nbv (GLuint index, const GLbyte *v);\nvoid glVertexAttrib4Niv (GLuint index, const GLint *v);\nvoid glVertexAttrib4Nsv (GLuint index, const GLshort *v);\nvoid glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);\nvoid glVertexAttrib4Nubv (GLuint index, const GLubyte *v);\nvoid glVertexAttrib4Nuiv (GLuint index, const GLuint *v);\nvoid glVertexAttrib4Nusv (GLuint index, const GLushort *v);\nvoid glVertexAttrib4bv (GLuint index, const GLbyte *v);\nvoid glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nvoid glVertexAttrib4dv (GLuint index, const GLdouble *v);\nvoid glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nvoid glVertexAttrib4fv (GLuint index, const GLfloat *v);\nvoid glVertexAttrib4iv (GLuint index, const GLint *v);\nvoid glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);\nvoid glVertexAttrib4sv (GLuint index, const GLshort *v);\nvoid glVertexAttrib4ubv (GLuint index, const GLubyte *v);\nvoid glVertexAttrib4uiv (GLuint index, const GLuint *v);\nvoid glVertexAttrib4usv (GLuint index, const GLushort *v);\nvoid glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);\nvoid glEnableVertexAttribArray (GLuint index);\nvoid glDisableVertexAttribArray (GLuint index);\nvoid glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);\nvoid glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);\nvoid glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);\nvoid glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer);\nvoid glDeleteShader (GLuint shader);\nvoid glDetachShader (GLuint program, GLuint shader);\nGLuint glCreateShader (GLenum type);\nvoid glShaderSource (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);\nvoid glCompileShader (GLuint shader);\nGLuint glCreateProgram (void);\nvoid glAttachShader (GLuint program, GLuint shader);\nvoid glLinkProgram (GLuint program);\nvoid glUseProgram (GLuint program);\nvoid glDeleteProgram (GLuint program);\nvoid glValidateProgram (GLuint program);\nvoid glUniform1f (GLint location, GLfloat v0);\nvoid glUniform2f (GLint location, GLfloat v0, GLfloat v1);\nvoid glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\nvoid glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\nvoid glUniform1i (GLint location, GLint v0);\nvoid glUniform2i (GLint location, GLint v0, GLint v1);\nvoid glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);\nvoid glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\nvoid glUniform1fv (GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform2fv (GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform3fv (GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform4fv (GLint location, GLsizei count, const GLfloat *value);\nvoid glUniform1iv (GLint location, GLsizei count, const GLint *value);\nvoid glUniform2iv (GLint location, GLsizei count, const GLint *value);\nvoid glUniform3iv (GLint location, GLsizei count, const GLint *value);\nvoid glUniform4iv (GLint location, GLsizei count, const GLint *value);\nvoid glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLboolean glIsShader (GLuint shader);\nGLboolean glIsProgram (GLuint program);\nvoid glGetShaderiv (GLuint shader, GLenum pname, GLint *params);\nvoid glGetProgramiv (GLuint program, GLenum pname, GLint *params);\nvoid glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);\nvoid glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\nvoid glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\nGLint glGetUniformLocation (GLuint program, const GLchar *name);\nvoid glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\nvoid glGetUniformfv (GLuint program, GLint location, GLfloat *params);\nvoid glGetUniformiv (GLuint program, GLint location, GLint *params);\nvoid glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);\nvoid glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);\nvoid glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\nGLint glGetAttribLocation (GLuint program, const GLchar *name);\nvoid glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);\nvoid glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);\nvoid glStencilMaskSeparate (GLenum face, GLuint mask);\nvoid glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nvoid glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\n")

return gl
